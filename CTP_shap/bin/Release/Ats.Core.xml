<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ats.Core</name>
    </assembly>
    <members>
        <member name="T:Ats.Core.IBContract">
            <summary>
            IB合约
            </summary>
        </member>
        <member name="P:Ats.Core.IBContract.InstrumentID">
            <summary>
            品种代码
            MQ用户自定义的
            </summary>
        </member>
        <member name="P:Ats.Core.IBContract.SecType">
            <summary>
            品种类型
            STK - stock
            OPT - option
            FUT - future
            IND - index
            FOP - future on an option
            CASH - forex pair
            BAG - combo
            WAR - warrant
            </summary>
        </member>
        <member name="P:Ats.Core.IBContract.Symbol">
            <summary>
            品种代码
            </summary>
        </member>
        <member name="P:Ats.Core.IBContract.Exchange">
            <summary>
            交易所
            </summary>
        </member>
        <member name="P:Ats.Core.IBContract.Currency">
            <summary>
            币种
            </summary>
        </member>
        <member name="P:Ats.Core.IBContract.Expiry">
            <summary>
            合约的过期日期
            </summary>
        </member>
        <member name="P:Ats.Core.IBContract.IncludeExpired">
            <summary>
            排除过期
            </summary>
        </member>
        <member name="P:Ats.Core.IBContract.Right">
            <summary>
            看多看空，仅对期权有效
            Call Put
            </summary>
        </member>
        <member name="P:Ats.Core.IBContract.Strike">
            <summary>
            期权的Strike
            </summary>
        </member>
        <member name="P:Ats.Core.IBContract.Multiplier">
            <summary>
            Multiplier 
            期权，期货
            </summary>
        </member>
        <member name="P:Ats.Core.IBContract.LocalSymbol">
            <summary>
            本地代码
            </summary>
        </member>
        <member name="P:Ats.Core.IBContract.FullInstrumentID">
            <summary>
            根据规则完整的代码
            </summary>
        </member>
        <member name="T:Ats.Core.HistoryData">
            <summary>
            历史数据
            </summary>
        </member>
        <member name="F:Ats.Core.HistoryData.Year">
            <summary>
            年
            </summary>
        </member>
        <member name="F:Ats.Core.HistoryData.Month">
            <summary>
            月
            </summary>
        </member>
        <member name="F:Ats.Core.HistoryData.Day">
            <summary>
            日
            </summary>
        </member>
        <member name="T:Ats.Core.ModifyMoneyInfo">
            <summary>
            出金入金信息
            这个只在复盘有效
            </summary>
        </member>
        <member name="F:Ats.Core.ModifyMoneyInfo.Market">
            <summary>
            转账账户类型
            </summary>
        </member>
        <member name="F:Ats.Core.ModifyMoneyInfo.Money">
            <summary>
            转账金额
            </summary>
        </member>
        <member name="F:Ats.Core.ModifyMoneyInfo.Before">
            <summary>
            转账前总金额
            </summary>
        </member>
        <member name="F:Ats.Core.ModifyMoneyInfo.After">
            <summary>
            转账后总金额
            </summary>
        </member>
        <member name="F:Ats.Core.ModifyMoneyInfo.ModifyTime">
            <summary>
            转账时间
            </summary>
        </member>
        <member name="T:Ats.Core.SimpleResult">
            <summary>
            复盘简单结果---便于调优器比较
            </summary>
        </member>
        <member name="F:Ats.Core.SimpleResult.最大回撤金额">
            <summary>
            是一个负数
            </summary>
        </member>
        <member name="F:Ats.Core.SimpleResult.资产线">
            <summary>
            资产线
            </summary>
        </member>
        <member name="T:Ats.Core.StockPositionItem">
            <summary>
            可标记的股票持仓记录
            </summary>
        </member>
        <member name="T:Ats.Core.DateDoubleSeries">
            <summary>
            日期序列
            </summary>
        </member>
        <member name="M:Ats.Core.DateDoubleSeries.Contains(System.DateTime)">
            <summary>
            是否包含t
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.DateDoubleSeries.Add(System.DateTime,System.Double)">
            <summary>
            插入新数据
            </summary>
            <param name="t"></param>
            <param name="v"></param>
        </member>
        <member name="M:Ats.Core.DateDoubleSeries.CutTailAt(System.DateTime)">
            <summary>
            从尾部截断
            </summary>
            <param name="t"></param>
        </member>
        <member name="M:Ats.Core.DateDoubleSeries.CutHeadAt(System.DateTime)">
            <summary>
            时间T之前的数据都截断
            </summary>
            <param name="t"></param>
        </member>
        <member name="T:Ats.Core.DateIntSeries">
            <summary>
            日期整型序列
            </summary>
        </member>
        <member name="M:Ats.Core.DateIntSeries.Contains(System.DateTime)">
            <summary>
            是否包含t
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.DateIntSeries.Insert(System.DateTime,System.Int32)">
            <summary>
            插入新数据
            </summary>
            <param name="t"></param>
            <param name="v"></param>
        </member>
        <member name="T:Ats.Core.EnumTradeEvent">
            <summary>
            交易事件的类型
            </summary>
        </member>
        <member name="F:Ats.Core.EnumTradeEvent.OnOrder">
            <summary>
            委托回报
            </summary>
        </member>
        <member name="F:Ats.Core.EnumTradeEvent.OnOrderReject">
            <summary>
            委托拒绝回报
            </summary>
        </member>
        <member name="F:Ats.Core.EnumTradeEvent.OnOrderCanceled">
            <summary>
            撤单成功
            </summary>
        </member>
        <member name="F:Ats.Core.EnumTradeEvent.OnOrderCancelFailed">
            <summary>
            撤单失败
            </summary>
        </member>
        <member name="F:Ats.Core.EnumTradeEvent.OnTrade">
            <summary>
            成交回报事件
            </summary>
        </member>
        <member name="T:Ats.Core.EnumLogType">
            <summary>
            日志类型
            </summary>
        </member>
        <member name="F:Ats.Core.EnumLogType.Info">
            <summary>
            普通日志
            </summary>
        </member>
        <member name="F:Ats.Core.EnumLogType.Error">
            <summary>
            错误
            </summary>
        </member>
        <member name="F:Ats.Core.EnumLogType.Warning">
            <summary>
            警告
            </summary>
        </member>
        <member name="F:Ats.Core.EnumLogType.Label">
            <summary>
            标签信息
            </summary>
        </member>
        <member name="F:Ats.Core.EnumLogType.Debug">
            <summary>
            调试信息
            </summary>
        </member>
        <member name="F:Ats.Core.EnumLogType.Internal">
            <summary>
            内部日志
            </summary>
        </member>
        <member name="F:Ats.Core.EnumLogType.System">
            <summary>
            系统日志
            </summary>
        </member>
        <member name="T:Ats.Core.EnumMoneyType">
            <summary>
            币种
            </summary>
        </member>
        <member name="T:Ats.Core.EnumMQOrderStatus">
            <summary>
            MQ定义的委托状态
            </summary>
        </member>
        <member name="F:Ats.Core.EnumMQOrderStatus.未报">
            <summary>
            还没有提交出去
            </summary>
        </member>
        <member name="F:Ats.Core.EnumMQOrderStatus.已报">
            <summary>
            已经提交出去
            </summary>
        </member>
        <member name="F:Ats.Core.EnumMQOrderStatus.部分成交">
            <summary>
            已经提交出去了，并且有成交，但又还没有全部成交
            </summary>
        </member>
        <member name="F:Ats.Core.EnumMQOrderStatus.正撤">
            <summary>
            已经发出撤单动作，不过还没有收到撤单成功或者失败的回报
            </summary>
        </member>
        <member name="F:Ats.Core.EnumMQOrderStatus.全部成交">
            <summary>
            全部成交了
            </summary>
        </member>
        <member name="F:Ats.Core.EnumMQOrderStatus.废单">
            <summary>
            委托因为某些原因（例如价格超出涨跌停板等）被拒绝了
            </summary>
        </member>
        <member name="F:Ats.Core.EnumMQOrderStatus.已撤">
            <summary>
            委托已经全部撤掉了
            </summary>
        </member>
        <member name="F:Ats.Core.EnumOptionDirection.认购">
            <summary>
            认购期权
            </summary>
        </member>
        <member name="F:Ats.Core.EnumOptionDirection.认沽">
            <summary>
            认沽期权
            </summary>
        </member>
        <member name="T:Ats.Core.EnumOptionExecute">
            <summary>
            行权方式
            </summary>
        </member>
        <member name="F:Ats.Core.EnumOptionExecute.欧式">
            <summary>
            欧式
            </summary>
        </member>
        <member name="F:Ats.Core.EnumOptionExecute.美式">
            <summary>
            美式
            </summary>
        </member>
        <member name="T:Ats.Core.EnumSimuMatchMode">
            <summary>
            仿真的撮合价格模式
            1最新价=最新价成交
            2买卖盘=买一卖一[严苛]
            3高频模式
            4委托必成 按照委托价必然成交
            </summary>
        </member>
        <member name="F:Ats.Core.EnumSimuMatchMode.最新价">
            <summary>
            最新价成交
            </summary>
        </member>
        <member name="F:Ats.Core.EnumSimuMatchMode.买卖盘">
            <summary>
            按照买一卖一成交
            </summary>
        </member>
        <member name="F:Ats.Core.EnumSimuMatchMode.高频">
            <summary>
            高频模式特殊撮合
            </summary>
        </member>
        <member name="F:Ats.Core.EnumSimuMatchMode.委托必成">
            <summary>
            按照委托价必然成交
            </summary>
        </member>
        <member name="T:Ats.Core.EnumTickStatus">
            <summary>
            Tick状态
            </summary>
        </member>
        <member name="T:Ats.Core.StrategyWorkMode">
            <summary>
            策略模式
            </summary>
        </member>
        <member name="F:Ats.Core.StrategyWorkMode.Live">
            <summary>
            实盘
            </summary>
        </member>
        <member name="F:Ats.Core.StrategyWorkMode.Simulate">
            <summary>
            复盘回测
            </summary>
        </member>
        <member name="T:Ats.Core.ETFItem">
            <summary>
            ETF的成分股信息
            </summary>
        </member>
        <member name="P:Ats.Core.ETFItem.InstrumentID">
            <summary>
            证券代码
            </summary>
        </member>
        <member name="P:Ats.Core.ETFItem.InstrumentName">
            <summary>
            证券简称
            </summary>
        </member>
        <member name="P:Ats.Core.ETFItem.Qty">
            <summary>
            成分股数量（股）
            </summary>
        </member>
        <member name="P:Ats.Core.ETFItem.CashFlag">
            <summary>
            现金替代标志
            0禁止现金替代
            1可以现金替代
            2必须现金替代
            </summary>
        </member>
        <member name="P:Ats.Core.ETFItem.CashOver">
            <summary>
            现金替代溢价比率
            </summary>
        </member>
        <member name="P:Ats.Core.ETFItem.CashMoney">
            <summary>
            固定替代金额
            </summary>
        </member>
        <member name="P:Ats.Core.ETFItem.CashFlagInfo">
            <summary>
            现金替代标志信息
            </summary>
        </member>
        <member name="T:Ats.Core.ETFList">
            <summary>
            ETF清单
            </summary>
        </member>
        <member name="F:Ats.Core.ETFList.ETFItemLst">
            <summary>
            成分股列表
            </summary>
        </member>
        <member name="M:Ats.Core.ETFList.ToString">
            <summary>
            内容
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ats.Core.ETFList.FundID">
            <summary>
            ETF代码
            例如510300.SH
            </summary>
        </member>
        <member name="P:Ats.Core.ETFList.FundName">
            <summary>
            基金名称
            例如：50ETF
            </summary>
        </member>
        <member name="P:Ats.Core.ETFList.CreationRedemptionUnit">
            <summary>
            最小申购、赎回单位(单位:份)
            </summary>
        </member>
        <member name="P:Ats.Core.ETFList.MaxCashRatio">
            <summary>
            可以现金替代比例上限
            </summary>
        </member>
        <member name="P:Ats.Core.ETFList.Publish">
            <summary>
            是否需要公布IOPV
            </summary>
        </member>
        <member name="P:Ats.Core.ETFList.EstimateCashComponent">
            <summary>
            最小申购赎回单位现金红利(单位:元)
            </summary>
        </member>
        <member name="P:Ats.Core.ETFList.TradingDay">
            <summary>
            交易日
            </summary>
        </member>
        <member name="P:Ats.Core.ETFList.PreTradingDay">
            <summary>
            前一个交易日
            </summary>
        </member>
        <member name="P:Ats.Core.ETFList.CashComponent">
            <summary>
            现金差额(单位:元)
            </summary>
        </member>
        <member name="P:Ats.Core.ETFList.NAVperCU">
            <summary>
            最小申购、赎回单位净值(单位:元)
            </summary>
        </member>
        <member name="P:Ats.Core.ETFList.NAV">
            <summary>
            基金份额净值(单位:元)
            </summary>
        </member>
        <member name="P:Ats.Core.ETFList.ETFItemCount">
            <summary>
            ETF组合证券个数
            </summary>
        </member>
        <member name="T:Ats.Core.IValue">
            <summary>
            数值方法的接口
            </summary>
        </member>
        <member name="M:Ats.Core.IValue.value(System.Double)">
            <summary>
            数值接口
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="T:Ats.Core.MathUtils">
            <summary>
            数学工具类
            </summary>
        </member>
        <member name="M:Ats.Core.MathUtils.close_enough(System.Double,System.Double)">
            <summary>
            2个double是否很接近
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathUtils.close_enough(System.Double,System.Double,System.Int32)">
            <summary>
            2个double是否很接近
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.AshareTradingDaysBuildBlock.GetFutureAShareTradingDays(System.Collections.Generic.List{System.DateTime}@)">
            <summary>
            未来还没有公布交易日的日期
            </summary>
            <param name="lst"></param>
        </member>
        <member name="M:Ats.Core.AshareTradingDaysBuildBlock.GetVeryOldAshareTradingDays(System.Collections.Generic.List{System.DateTime}@)">
            <summary>
            获取旧的交易日
            </summary>
            <param name="lst"></param>
        </member>
        <member name="M:Ats.Core.AshareTradingDaysBuildBlock.Get2012Days(System.Collections.Generic.List{System.DateTime}@)">
            <summary>
            获取2012年交易日
            </summary>
            <param name="lst"></param>
        </member>
        <member name="M:Ats.Core.AshareTradingDaysBuildBlock.Get2013Days(System.Collections.Generic.List{System.DateTime}@)">
            <summary>
            获取2013年交易日
            </summary>
            <param name="lst"></param>
        </member>
        <member name="M:Ats.Core.AshareTradingDaysBuildBlock.Get2014Days(System.Collections.Generic.List{System.DateTime}@)">
            <summary>
            获取2014年交易日
            </summary>
            <param name="lst"></param>
        </member>
        <member name="M:Ats.Core.AshareTradingDaysBuildBlock.Get2015Days(System.Collections.Generic.List{System.DateTime}@)">
            <summary>
            获取2015年交易日
            </summary>
            <param name="lst"></param>
        </member>
        <member name="M:Ats.Core.AshareTradingDaysBuildBlock.Get2016Days(System.Collections.Generic.List{System.DateTime}@)">
            <summary>
            获取2016年交易日
            </summary>
            <param name="lst"></param>
        </member>
        <member name="T:Ats.Core.TradingDayHelper">
            <summary>
            交易日帮助器
            </summary>
        </member>
        <member name="M:Ats.Core.TradingDayHelper.IsChinaTradingDay(System.DateTime)">
            <summary>
            是否A股交易日
            </summary>
            <param name="day">交易日</param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.TradingDayHelper.GetChinaTradingDaysBuYear(System.Int32)">
            <summary>
            查询某一年的交易日
            </summary>
            <param name="Year">年</param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.TradingDayHelper.GetAllChinaTradingDays">
            <summary>
            获取所有A股交易日
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.TradingDayHelper.GetPreTradingDay(System.DateTime)">
            <summary>
            获取前一个交易日
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.TradingDayHelper.GetNextTradingDay(System.DateTime)">
            <summary>
            获取下一个交易日
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.TradingDayHelper.GetNaturalDateTime(System.TimeSpan,System.DateTime,System.DateTime,System.DateTime)">
            <summary>
            获取自然时间
            </summary>
            <param name="timeSpan">时间段TimeSpan</param>
            <param name="tradingDate">交易日</param>
            <param name="preTradingDay">前一个交易日</param>
            <param name="preTradingDayT1">前一个交易日的第二个自然日</param>
            <returns>自然时间</returns>
        </member>
        <member name="M:Ats.Core.TradingDayHelper.GetNightTimeType(System.TimeSpan)">
            <summary>
            夜盘模式
            </summary>
            <param name="timeSpan">时间段TimeSpan</param>
            <returns>0普通白盘 1夜盘，当晚24:00之前 2夜盘,凌晨0:00之后</returns>
        </member>
        <member name="P:Ats.Core.TradingDayHelper.Days">
            <summary>
            所有的交易日
            </summary>
        </member>
        <member name="M:Ats.Core.ExchangeHelper.GetAllExchanges">
            <summary>
            获取所有交易所的信息
            </summary>
            <returns>所有交易所</returns>
        </member>
        <member name="T:Ats.Core.ExecutorParameter">
            <summary>
            执行器参数
            </summary>
        </member>
        <member name="P:Ats.Core.ExecutorParameter.ParameterName">
            <summary>
            参数名称
            </summary>
        </member>
        <member name="P:Ats.Core.ExecutorParameter.ValueType">
            <summary>
            参数类型
            </summary>
        </member>
        <member name="T:Ats.Core.MarginInstrument">
            <summary>
            融资融券标的信息
            </summary>
        </member>
        <member name="F:Ats.Core.MarginInstrument.StockCode">
            <summary>
            股票代码
            </summary>
        </member>
        <member name="F:Ats.Core.MarginInstrument.Direction">
            <summary>
            方向
            </summary>
        </member>
        <member name="F:Ats.Core.MarginInstrument.MarginRatio">
            <summary>
            保证金比率
            </summary>
        </member>
        <member name="F:Ats.Core.MarginInstrument.Avaible">
            <summary>
            可融券数量（对融券有效）
            </summary>
        </member>
        <member name="F:Ats.Core.MarginInstrument.IfValid">
            <summary>
            状态
            True：正常
            False：暂停
            </summary>
        </member>
        <member name="T:Ats.Core.MarginContract">
            <summary>
            融资融券合同
            </summary>
        </member>
        <member name="F:Ats.Core.MarginContract.Direction">
            <summary>
            方向
            </summary>
        </member>
        <member name="F:Ats.Core.MarginContract.OpenDate">
            <summary>
            开仓日期
            </summary>
        </member>
        <member name="F:Ats.Core.MarginContract.StockCode">
            <summary>
            合约代码
            </summary>
        </member>
        <member name="F:Ats.Core.MarginContract.Volume">
            <summary>
            合约开仓数量
            </summary>
        </member>
        <member name="F:Ats.Core.MarginContract.OrderVolume">
            <summary>
            委托数量
            </summary>
        </member>
        <member name="F:Ats.Core.MarginContract.UnRepaidVolume">
            <summary>
            未还合约数量
            </summary>
        </member>
        <member name="F:Ats.Core.MarginContract.RepaidVolume">
            <summary>
            已还合约数量
            </summary>
        </member>
        <member name="F:Ats.Core.MarginContract.ReturnEndDate">
            <summary>
            归还截止日
            </summary>
        </member>
        <member name="F:Ats.Core.MarginContract.ClearDate">
            <summary>
            了结日期
            </summary>
        </member>
        <member name="F:Ats.Core.MarginContract.IfClear">
            <summary>
            是否了结（是不是compact_status字段）
            </summary>
        </member>
        <member name="T:Ats.Core.Option">
            <summary>
            期权
            </summary>
        </member>
        <member name="T:Ats.Core.Instrument">
            <summary>
            金融工具
            对应期货合约、股票、ETF
            </summary>
        </member>
        <member name="F:Ats.Core.Instrument._PriceTick">
            <summary>
            跳
            </summary>
        </member>
        <member name="F:Ats.Core.Instrument._VolumeMultiple">
            <summary>
            数量乘数
            </summary>
        </member>
        <member name="F:Ats.Core.Instrument._LifePhase">
            <summary>
            上市交易
            停牌
            </summary>
        </member>
        <member name="F:Ats.Core.Instrument._CanSelTodayPos">
            <summary>
            当日新增持仓是否可以卖出
            True T+0 
            False T+1
            </summary>
        </member>
        <member name="F:Ats.Core.Instrument._UpLimit">
            <summary>
            涨停价
            </summary>
        </member>
        <member name="F:Ats.Core.Instrument._DropLimit">
            <summary>
            跌停价
            </summary>
        </member>
        <member name="M:Ats.Core.Instrument.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Ats.Core.Instrument.OnTick(Ats.Core.Tick)">
            <summary>
            Tick触发
            </summary>
            <param name="tick"></param>
        </member>
        <member name="M:Ats.Core.Instrument.ToString">
            <summary>
            转化成字符串
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ats.Core.Instrument.ID">
            <summary>
            合约代码
            股票600028.SH
            期货IF1512
            </summary>
        </member>
        <member name="P:Ats.Core.Instrument.CanSelTodayPos">
            <summary>
            持仓交易类型
            当日新增持仓是否可以卖出
            True T+0
            False T+1
            </summary>
        </member>
        <member name="P:Ats.Core.Instrument.Market">
            <summary>
            市场
            股票、期货、股票期权、期货期权
            </summary>
        </member>
        <member name="P:Ats.Core.Instrument.ExchangeID">
            <summary>
            交易所代码
            </summary>
        </member>
        <member name="P:Ats.Core.Instrument.Name">
            <summary>
            合约名称
            </summary>
        </member>
        <member name="P:Ats.Core.Instrument.LastTick">
            <summary>
            最新Tick
            注意:只有Tick驱动时才有效(分钟线驱动时无效)
            </summary>
        </member>
        <member name="P:Ats.Core.Instrument.LastPrice">
            <summary>
            最新价格
            注意:只有Tick驱动时才有效(分钟线驱动时无效)
            </summary>
        </member>
        <member name="P:Ats.Core.Instrument.PreClose">
            <summary>
            昨收盘
            注意:只有Tick驱动时才有效(分钟线驱动时无效)
            </summary>
        </member>
        <member name="P:Ats.Core.Instrument.PreSettlementPrice">
            <summary>
            昨结算价
            仅期货有效
            注意:只有Tick驱动时才有效(分钟线驱动时无效)
            </summary>
        </member>
        <member name="P:Ats.Core.Instrument.UpLimit">
            <summary>
            涨停价
            注意:只有Tick驱动时才有效(分钟线驱动时无效)
            </summary>
        </member>
        <member name="P:Ats.Core.Instrument.DropLimit">
            <summary>
            跌停价
            注意:只有Tick驱动时才有效(分钟线驱动时无效)
            </summary>
        </member>
        <member name="P:Ats.Core.Instrument.VolumeMultiple">
            <summary>
            合约数量乘数
            </summary>
        </member>
        <member name="P:Ats.Core.Instrument.PriceTick">
            <summary>
            最小变动价位
            价位价差，股指期货=0.2 股票=0.01 ETF=0.001
            </summary>
        </member>
        <member name="P:Ats.Core.Instrument.LifePhase">
            <summary>
            合约的合约生命周期状态
            </summary>
        </member>
        <member name="P:Ats.Core.Instrument.UplimitRatio">
            <summary>
            涨停比例
            单位%
            </summary>
        </member>
        <member name="P:Ats.Core.Instrument.DropLimitRatio">
            <summary>
            跌停比例
            </summary>
        </member>
        <member name="P:Ats.Core.Instrument.LotSize">
            <summary>
            每手数量
            每手100股还是1000股?
            </summary>
        </member>
        <member name="E:Ats.Core.Instrument.TickEvent">
            <summary>
            Tick事件
            每当交易所传过来一个
            </summary>
        </member>
        <member name="F:Ats.Core.Option.RefInstrument">
            <summary>
            标的品种
            标的证券代码
            可能是期货，也可能是股票
            </summary>
        </member>
        <member name="F:Ats.Core.Option._OptionExecute">
            <summary>
            目前中国的都是欧式的
            </summary>
        </member>
        <member name="P:Ats.Core.Option.RefInstrumentID">
            <summary>
            合约标的
            股票期权：对应的个股
            期货期权：对应的期货
            </summary>
        </member>
        <member name="P:Ats.Core.Option.ExecuteType">
            <summary>
            行权方式
            </summary>
        </member>
        <member name="P:Ats.Core.Option.Direction">
            <summary>
            期权合约的方向类型
            Call 认购期权
            Put 认沽期权
            </summary>
        </member>
        <member name="P:Ats.Core.Option.ExecutePrice">
            <summary>
            行权价格
            行权价格即期权的履约价格。
            对于认购期权，权利方有权利以行权价格从期权的义务方买入标的证券。
            对于认沽期权，权利方有权利以行权价格卖出标的证券给义务方。
            </summary>
        </member>
        <member name="P:Ats.Core.Option.ExpireDate">
            <summary>
            到期日
            </summary>
        </member>
        <member name="P:Ats.Core.Option.ExecuteDate">
            <summary>
            最后行权日期
            </summary>
        </member>
        <member name="P:Ats.Core.Option.StartDate">
            <summary>
            首个交易日
            </summary>
        </member>
        <member name="P:Ats.Core.Option.EndDate">
            <summary>
            最后交易日
            </summary>
        </member>
        <member name="P:Ats.Core.Option.DeliverDate">
            <summary>
            行权交割日
            </summary>
        </member>
        <member name="P:Ats.Core.Option.MarginUnit">
            <summary>
            保证金单位
            </summary>
        </member>
        <member name="P:Ats.Core.Option.OpenMarginRatio">
            <summary>
            开仓保证金
            认购期权义务仓开仓保证金＝[合约前结算价+Max（12%×合约标的前收盘价-认购期权虚值，7%×合约标的前收盘价）]×合约单位
            认沽期权义务仓开仓保证金＝Min[合约前结算价+Max（12%×合约标的前收盘价-认沽期权虚值，7%×行权价格），行权价格] ×合约单位
            </summary>
        </member>
        <member name="P:Ats.Core.Option.HoldMarginRatio">
            <summary>
            维持保证金
            认购期权义务仓维持保证金＝[合约结算价+Max（12%×合约标的收盘价-认购期权虚值，7%×合约标的收盘价）]×合约单位
            认沽期权义务仓维持保证金＝Min[合约结算价 +Max（12%×合标的收盘价-认沽期权虚值，7%×行权价格），行权价格]×合约单位
            </summary>
        </member>
        <member name="P:Ats.Core.Option.OptionTradeCode">
            <summary>
            期权交易代码
            </summary>
        </member>
        <member name="T:Ats.Core.OptionSeries">
            <summary>
            期权序列
            </summary>
        </member>
        <member name="M:Ats.Core.OptionSeries.Add(Ats.Core.Option)">
            <summary>
            队列中加入
            </summary>
            <param name="option"></param>
        </member>
        <member name="T:Ats.Core.MQGlobal">
            <summary>
            MQ全局对象
            </summary>
        </member>
        <member name="F:Ats.Core.MQGlobal.MyInt">
            <summary>
            全局整数
            </summary>
        </member>
        <member name="F:Ats.Core.MQGlobal.MyDouble">
            <summary>
            全局双精度数
            </summary>
        </member>
        <member name="F:Ats.Core.MQGlobal.MyString">
            <summary>
            全局字符串
            </summary>
        </member>
        <member name="F:Ats.Core.MQGlobal.MyBool">
            <summary>
            全局Bool量
            </summary>
        </member>
        <member name="F:Ats.Core.MQGlobal.MyObject">
            <summary>
            全局对象
            </summary>
        </member>
        <member name="F:Ats.Core.MQGlobal.IntData">
            <summary>
            整型数组
            </summary>
        </member>
        <member name="F:Ats.Core.MQGlobal.DoubleData">
            <summary>
            双精度型数组
            </summary>
        </member>
        <member name="F:Ats.Core.MQGlobal.StringData">
            <summary>
            字符串数组
            </summary>
        </member>
        <member name="F:Ats.Core.MQGlobal.BoolData">
            <summary>
            布尔数组
            </summary>
        </member>
        <member name="F:Ats.Core.MQGlobal.ObjectData">
            <summary>
            对象数组
            </summary>
        </member>
        <member name="F:Ats.Core.MQGlobal.IntDict">
            <summary>
            整型字典
            </summary>
        </member>
        <member name="F:Ats.Core.MQGlobal.DoubleDict">
            <summary>
            双精度字典
            </summary>
        </member>
        <member name="F:Ats.Core.MQGlobal.StringDict">
            <summary>
            字符串字典
            </summary>
        </member>
        <member name="F:Ats.Core.MQGlobal.BoolDict">
            <summary>
            布尔字典
            </summary>
        </member>
        <member name="F:Ats.Core.MQGlobal.ObjectDict">
            <summary>
            全局字典
            </summary>
        </member>
        <member name="M:Ats.Core.MQGlobal.#ctor">
            <summary>
            私有构造函数
            </summary>
        </member>
        <member name="P:Ats.Core.MQGlobal.Instance">
            <summary>
            MQ全局对象实例
            </summary>
        </member>
        <member name="T:Ats.Core.StockBasket">
            <summary>
            股票篮子列表
            </summary>
        </member>
        <member name="M:Ats.Core.StockBasket.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Ats.Core.StockBasket.AddBasketDetail(System.String,System.Int32,Ats.Core.EnumBuySell,System.Double,Ats.Core.EnumOrderPriceType,Ats.Core.EnumOrderTimeForce)">
            <summary>
            添加一个篮子明细
            </summary>
            <param name="StockCode">股票代码</param>
            <param name="Volume">股数</param>
            <param name="Direction">买卖方向</param>
            <param name="LimitPrice">限价</param>
            <param name="PriceType">价格类型</param>
            <param name="TimeForce">时间类型</param>
            <returns>是否添加成功</returns>
        </member>
        <member name="P:Ats.Core.StockBasket.ID">
            <summary>
            篮子ID
            </summary>
        </member>
        <member name="P:Ats.Core.StockBasket.Basket">
            <summary>
            篮子内容
            key:品种代码
            值:篮子明细
            </summary>
        </member>
        <member name="P:Ats.Core.StockBasket.BasketStatus">
            <summary>
            篮子状态
            初始:未报
            如果已经交给底层提交出去:已报
            如果篮子全部成交了，全部成交
            如果部分成交，其余委托非终态:部分成交
            如果部分成交，其余全部是终态(已撤，或者废单):已撤
            如果所有委托都是废单:废单
            </summary>
        </member>
        <member name="P:Ats.Core.StockBasket.Count">
            <summary>
            篮子里明细的个数
            </summary>
        </member>
        <member name="T:Ats.Core.StockBasketDetail">
            <summary>
            股票篮子明细条目
            </summary>
        </member>
        <member name="M:Ats.Core.StockBasketDetail.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:Ats.Core.StockBasketDetail.ID">
            <summary>
            篮子明细ID
            </summary>
        </member>
        <member name="P:Ats.Core.StockBasketDetail.StockCode">
            <summary>
            股票品种代码
            </summary>
        </member>
        <member name="P:Ats.Core.StockBasketDetail.Volume">
            <summary>
            交易数量
            </summary>
        </member>
        <member name="P:Ats.Core.StockBasketDetail.Direction">
            <summary>
            买卖方向
            </summary>
        </member>
        <member name="P:Ats.Core.StockBasketDetail.LimitPrice">
            <summary>
            限价
            </summary>
        </member>
        <member name="P:Ats.Core.StockBasketDetail.PriceType">
            <summary>
            价格类型
            </summary>
        </member>
        <member name="P:Ats.Core.StockBasketDetail.TimeForce">
            <summary>
            时间类型
            </summary>
        </member>
        <member name="P:Ats.Core.StockBasketDetail.OrderStatus">
            <summary>
            篮子的订单状态
            </summary>
        </member>
        <member name="P:Ats.Core.StockBasketDetail.VolumeTraded">
            <summary>
            该篮子明细成交总量
            </summary>
        </member>
        <member name="P:Ats.Core.StockBasketDetail.VolumeLeft">
            <summary>
            剩余未成交的数量
            </summary>
        </member>
        <member name="P:Ats.Core.StockBasketDetail.SubOrder">
            <summary>
            子单
            该篮子项对应的委托
            一个篮子明细只可能对应一个委托
            </summary>
        </member>
        <member name="T:Ats.Core.StockCommissionRate">
            <summary>
            股票费率
            </summary>
        </member>
        <member name="P:Ats.Core.StockCommissionRate.BrokerID">
            <summary>
            经纪公司代码
            </summary>
        </member>
        <member name="P:Ats.Core.StockCommissionRate.InvestorID">
            <summary>
            投资者代码
            </summary>
        </member>
        <member name="P:Ats.Core.StockCommissionRate.BuyStockRatio">
            <summary>
            买入股票手续费率
            </summary>
        </member>
        <member name="P:Ats.Core.StockCommissionRate.SellStockRatio">
            <summary>
            卖出股票手续费率
            </summary>
        </member>
        <member name="P:Ats.Core.StockCommissionRate.BuyFundRatio">
            <summary>
            二级市场买入基金
            </summary>
        </member>
        <member name="P:Ats.Core.StockCommissionRate.SellFundRatio">
            <summary>
            二级市场卖出基金
            </summary>
        </member>
        <member name="P:Ats.Core.StockCommissionRate.BuyETFRatio">
            <summary>
            申购ETF费率
            </summary>
        </member>
        <member name="P:Ats.Core.StockCommissionRate.SellETFRatio">
            <summary>
            赎回ETF费率
            </summary>
        </member>
        <member name="T:Ats.Core.StockDivideProvider">
            <summary>
            股票除权提供器
            </summary>
        </member>
        <member name="F:Ats.Core.StockDivideProvider._divider">
            <summary>
            按照时间组织的除权索引
            </summary>
        </member>
        <member name="F:Ats.Core.StockDivideProvider._dividerStock">
            <summary>
            按照股票代码组织的除权索引
            </summary>
        </member>
        <member name="M:Ats.Core.StockDivideProvider.Add(Ats.Core.StockDivideItem)">
            <summary>
            增加StockDivideItem
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Ats.Core.StockDivideProvider.Clear">
            <summary>
            清理
            </summary>
        </member>
        <member name="M:Ats.Core.StockDivideProvider.Get(System.String,System.DateTime,System.DateTime)">
            <summary>
            获取的方法
            </summary>
            <param name="stockcode"></param>
            <param name="begin">开始时间</param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.StockDivideProvider.Get(System.String,System.DateTime)">
            <summary>
            查询除权除息信息(A股一天最多一次除权)
            </summary>
            <param name="stockcode">股票代码</param>
            <param name="tradingDay">交易日</param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.StockDivideProvider.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Ats.Core.StockDivideProvider.Instance">
            <summary>
            单件访问
            </summary>
        </member>
        <member name="T:Ats.Core.StockUtility">
            <summary>
            股票工具类
            </summary>
        </member>
        <member name="M:Ats.Core.StockUtility.CheckPriceDigitCount(System.String,System.Double)">
            <summary>
            检查股票报价是否合理
            </summary>
            <param name="stockcode"></param>
            <param name="limitPrice"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.StockUtility.GetPriceTick(System.String)">
            <summary>
            获取股票跳
            </summary>
            <param name="stockcode"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.StockUtility.GetDigitCount(System.String)">
            <summary>
            获取价格位数，2位或者3位
            </summary>
            <param name="stockcode"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.StockUtility.GetProductType(System.String)">
            <summary>
            获取股票类型
            </summary>
            <param name="stockCode"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.StockUtility.IsCanTrade(System.String)">
            <summary>
            可以交易
            </summary>
            <param name="stockcode"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.StockUtility.GetRound(System.String,System.Double)">
            <summary>
            取整
            </summary>
            <param name="stockcode"></param>
            <param name="price"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.StockUtility.GetStockUpLimit(System.Double,System.String,System.String)">
            <summary>
            计算股票涨停价
            </summary>
            <param name="preClose">昨收</param>
            <param name="stockCode">股票代码</param>
            <param name="stockName">股票名称</param>
            <returns>涨停价</returns>
        </member>
        <member name="M:Ats.Core.StockUtility.GetStockDropLimit(System.Double,System.String,System.String)">
            <summary>
            计算股票跌停价
            </summary>
            <param name="preClose">昨收</param>
            <param name="stockCode">股票代码</param>
            <param name="stockName">股票名称</param>
            <returns>跌停价</returns>
        </member>
        <member name="T:Ats.Core.Probe">
            <summary>
            探针
            </summary>
        </member>
        <member name="F:Ats.Core.Probe.Market">
            <summary>
            市场
            </summary>
        </member>
        <member name="F:Ats.Core.Probe.InsID">
            <summary>
            品种ID
            </summary>
        </member>
        <member name="F:Ats.Core.Probe.ProbingTime">
            <summary>
            探针时间
            </summary>
        </member>
        <member name="F:Ats.Core.Probe.Direction">
            <summary>
            方向
            </summary>
        </member>
        <member name="F:Ats.Core.Probe.Price">
            <summary>
            探针价格
            </summary>
        </member>
        <member name="F:Ats.Core.Probe.Life">
            <summary>
            探针寿命(分钟)
            </summary>
        </member>
        <member name="F:Ats.Core.Probe.Capacity">
            <summary>
            探针容量
            </summary>
        </member>
        <member name="M:Ats.Core.Probe.#ctor(Ats.Core.EnumMarket,System.String,System.DateTime,Ats.Core.EnumBuySell,System.Double,System.Double,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="_Market">市场</param>
            <param name="_InsID">品种代码</param>
            <param name="_T">探针时间</param>
            <param name="_Direction">买卖方向</param>
            <param name="_Price">探针价格</param>
            <param name="_Life">探针寿命(分钟)</param>
            <param name="_Count">探针个数</param>
        </member>
        <member name="T:Ats.Core.StrategyBasicInfo">
            <summary>
            策略基础信息
            </summary>
        </member>
        <member name="F:Ats.Core.StrategyBasicInfo.DllFileName">
            <summary>
            dll名称
            </summary>
        </member>
        <member name="F:Ats.Core.StrategyBasicInfo.NameSpace">
            <summary>
            命名空间
            </summary>
        </member>
        <member name="F:Ats.Core.StrategyBasicInfo.ClassName">
            <summary>
            类名
            </summary>
        </member>
        <member name="F:Ats.Core.StrategyBasicInfo.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="F:Ats.Core.StrategyBasicInfo.LastModifiedTime">
            <summary>
            最近一次修改时间
            </summary>
        </member>
        <member name="F:Ats.Core.StrategyBasicInfo.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="F:Ats.Core.StrategyBasicInfo.Pwd">
            <summary>
            策略密码
            </summary>
        </member>
        <member name="M:Ats.Core.StrategyBasicInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Ats.Core.StrategyBasicInfo.#ctor(Ats.Core.StrategyBasicInfo)">
            <summary>
            构造函数
            </summary>
            <param name="info">策略基础信息</param>
        </member>
        <member name="M:Ats.Core.StrategyBasicInfo.IsValid">
            <summary>
            是否合法
            </summary>
            <returns></returns>
        </member>
        <member name="T:Ats.Core.TimerAttribute">
            <summary>
            任务属性
            </summary>
        </member>
        <member name="F:Ats.Core.TimerAttribute.Name">
            <summary>
            任务名称
            </summary>
        </member>
        <member name="F:Ats.Core.TimerAttribute.Period">
            <summary>
            定时间隔,单位:毫秒
            </summary>
        </member>
        <member name="F:Ats.Core.TimerAttribute.StartTime">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="F:Ats.Core.TimerAttribute.EndTime">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="M:Ats.Core.TimerAttribute.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:Ats.Core.MQControl">
            <summary>
            MQ-控件
            用于呈现在UI容器中
            </summary>
        </member>
        <member name="F:Ats.Core.MQControl.Topic">
            <summary>
            消息主题
            用于收发消息
            </summary>
        </member>
        <member name="F:Ats.Core.MQControl.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="F:Ats.Core.MQControl._MyStrategy">
            <summary>
            我的策略
            </summary>
        </member>
        <member name="M:Ats.Core.MQControl.AttachStrategy(Ats.Core.Strategy)">
            <summary>
            控件在初始化时，需要把策略的实例挂载上去
            </summary>
            <param name="_Strategy">策略实例</param>
        </member>
        <member name="M:Ats.Core.MQControl.Print(System.String)">
            <summary>
            在策略的日志界面中显示
            </summary>
            <param name="str"></param>
        </member>
        <member name="E:Ats.Core.MQControl.OnStrategyAttach">
            <summary>
            策略挂载时间
            </summary>
        </member>
        <member name="E:Ats.Core.MQControl.OnStrategyDetach">
            <summary>
            策略接触挂载
            </summary>
        </member>
        <member name="T:Ats.Core.Account">
            <summary>
            账户
            </summary>
        </member>
        <member name="F:Ats.Core.Account._brokerid">
            <summary>
            经纪商ID
            如果没有就填空
            </summary>
        </member>
        <member name="F:Ats.Core.Account._Market">
            <summary>
            市场
            </summary>
        </member>
        <member name="F:Ats.Core.Account._accountid">
            <summary>
            资金账号
            </summary>
        </member>
        <member name="F:Ats.Core.Account._FundUnit">
            <summary>
            资金单元
            唯一确定账户的字段（跨券商）
            </summary>
        </member>
        <member name="F:Ats.Core.Account._balance">
            <summary>
            动态权益
            </summary>
        </member>
        <member name="F:Ats.Core.Account._available">
            <summary>
            可用资金
            </summary>
        </member>
        <member name="F:Ats.Core.Account._commission">
            <summary>
            当日产生的手续费
            </summary>
        </member>
        <member name="F:Ats.Core.Account._frozenmargin">
            <summary>
            冻结保证金
            委托冻结的资金
            </summary>
        </member>
        <member name="F:Ats.Core.Account._posMargin">
            <summary>
            持仓保证金
            持仓需要冻结的保证金
            期货：多头空头都需要冻结保证金
            期权：空头需要冻结保证金，多头不冻结保证金
            </summary>
        </member>
        <member name="F:Ats.Core.Account._MarketValue">
            <summary>
            市值
            </summary>
        </member>
        <member name="F:Ats.Core.Account._closeprofit">
            <summary>
            当前余额
            </summary>
        </member>
        <member name="F:Ats.Core.Account._AvailableT1">
            <summary>
            T+1可用金额
            </summary>
        </member>
        <member name="M:Ats.Core.Account.#ctor(Ats.Core.EnumMarket)">
            <summary>
            构造函数
            </summary>
            <param name="market">市场</param>
        </member>
        <member name="M:Ats.Core.Account.#ctor(Ats.Core.EnumMarket,System.Double)">
            <summary>
            构造函数
            </summary>
            <param name="market">市场</param>
            <param name="initMoney">初始时的资金</param>
        </member>
        <member name="M:Ats.Core.Account.ToString">
            <summary>
            转化成字符串
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ats.Core.Account.BrokerID">
            <summary>
            经纪公司代码
            </summary>
        </member>
        <member name="P:Ats.Core.Account.Market">
            <summary>
            市场
            </summary>
        </member>
        <member name="P:Ats.Core.Account.FundUnit">
            <summary>
            资金单元
            </summary>
        </member>
        <member name="P:Ats.Core.Account.GUID">
            <summary>
            系统GUID
            </summary>
        </member>
        <member name="P:Ats.Core.Account.ID">
            <summary>
            帐号
            </summary>
        </member>
        <member name="P:Ats.Core.Account.Balance">
            <summary>
            客户权益(期货结算准备金)(动态权益)
            =当前结存 = 期末结存 ＋ 质押
            </summary>
        </member>
        <member name="P:Ats.Core.Account.PreBalance">
            <summary>
            上一个交易日的Balance
            昨日结存的资金
            静态权益
            </summary>
        </member>
        <member name="P:Ats.Core.Account.MarketValue">
            <summary>
            证券市值
            </summary>
        </member>
        <member name="P:Ats.Core.Account.Available">
            <summary>
            可用资金=客户权益 － 占用保证金
            =动态权益-当日保证金
            =Balance-CurrMargin
            </summary>
        </member>
        <member name="P:Ats.Core.Account.AvailableT1">
            <summary>
            T+1日可用资金
            对于证券账户有这个特殊的字段
            </summary>
        </member>
        <member name="P:Ats.Core.Account.FrozenMargin">
            <summary>
            冻结的保证金: 报单未成交冻结的保证金
            </summary>
        </member>
        <member name="P:Ats.Core.Account.PositionMargin">
            <summary>
            持仓保证金
            期货--持仓保证金
            股票--没有这个概念
            股票期权---卖出期权有持仓保证金
            </summary>
        </member>
        <member name="P:Ats.Core.Account.Commission">
            <summary>
            手续费
            当日累积发生的手续费
            </summary>
        </member>
        <member name="P:Ats.Core.Account.FrozenCommission">
            <summary>
            冻结的手续费:
            报单时未成交冻结的手续费
            </summary>
        </member>
        <member name="P:Ats.Core.Account.Deposit">
            <summary>
            当日入金
            当日累积入金金额
            </summary>
        </member>
        <member name="P:Ats.Core.Account.Withdraw">
            <summary>
            当日出金
            当日累积出金金额
            </summary>
        </member>
        <member name="P:Ats.Core.Account.PositionProfit">
            <summary>
            期货特有字段
            持仓盈亏（浮动盈亏）: 今开仓的持仓盈亏 ＋ 历史仓的持仓盈亏
            当日盈亏(持仓盈亏)=历史持仓盈亏+今开仓持仓盈亏；
            当日盈亏在结算时划转，盈利划入结算准备金，亏损从结算准备金中扣划；
            </summary>
        </member>
        <member name="P:Ats.Core.Account.CloseProfit">
            <summary>
            期货特有的字段
            平仓盈亏: 平历史仓盈亏 ＋ 平当日开仓盈亏
            </summary>
        </member>
        <member name="P:Ats.Core.Account.Risk">
            <summary>
            风险=持仓/权益
            期货特有的属性
            </summary>
        </member>
        <member name="T:Ats.Core.AccountInfo">
            <summary>
            账户信息
            能唯一确定一个账户
            </summary>
        </member>
        <member name="F:Ats.Core.AccountInfo.ChannelID">
            <summary>
            UFX,CTP,....
            </summary>
        </member>
        <member name="F:Ats.Core.AccountInfo.AccountID">
            <summary>
            账户
            </summary>
        </member>
        <member name="F:Ats.Core.AccountInfo.PassWord">
            <summary>
            密码
            </summary>
        </member>
        <member name="F:Ats.Core.AccountInfo.BrokerID">
            <summary>
            经纪商ID
            </summary>
        </member>
        <member name="F:Ats.Core.AccountInfo.FundAccount">
            <summary>
            基金账户
            UFX--资金单元
            MQTrade---MQServer端的逻辑账户
            </summary>
        </member>
        <member name="F:Ats.Core.AccountInfo.CombineNo">
            <summary>
            UFX组合ID
            </summary>
        </member>
        <member name="F:Ats.Core.AccountInfo.MQFlag">
            <summary>
            MQ标志位
            股票账户：1信用账户
            </summary>
        </member>
        <member name="F:Ats.Core.AccountInfo.UIWndHandle">
            <summary>
            银江,自由鹰对应窗口句柄
            </summary>
        </member>
        <member name="F:Ats.Core.AccountInfo.UIMsgID">
            <summary>
            银江,自由鹰对应消息号
            </summary>
        </member>
        <member name="F:Ats.Core.AccountInfo.wd">
            <summary>
            网络
            </summary>
        </member>
        <member name="M:Ats.Core.AccountInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Ats.Core.AccountInfo.Clone">
            <summary>
            克隆
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.AccountInfo.GetAccountID(System.String)">
            <summary>
            根据资金单元反向推算账户ID
            </summary>
            <param name="FundUnit">资金单元</param>
            <returns>账户ID</returns>
        </member>
        <member name="P:Ats.Core.AccountInfo.FundUnit">
            <summary>
            资金单元
            能唯一确定账户的字段
            </summary>
        </member>
        <member name="T:Ats.Core.AtsLog">
            <summary>
            Ats日志[实盘复盘都用到]
            </summary>
        </member>
        <member name="F:Ats.Core.AtsLog.LogContent">
            <summary>
            Log内容
            </summary>
        </member>
        <member name="F:Ats.Core.AtsLog.LogTime">
            <summary>
            日志时刻
            </summary>
        </member>
        <member name="F:Ats.Core.AtsLog.LogType">
            <summary>
            日志类型
            </summary>
        </member>
        <member name="P:Ats.Core.AtsLog.Year">
            <summary>
            年
            </summary>
        </member>
        <member name="P:Ats.Core.AtsLog.Month">
            <summary>
            月
            </summary>
        </member>
        <member name="P:Ats.Core.AtsLog.Day">
            <summary>
            日
            </summary>
        </member>
        <member name="P:Ats.Core.AtsLog.TimeLogContent">
            <summary>
            加上时间标签的文本信息
            主要用于文本输出
            </summary>
        </member>
        <member name="T:Ats.Core.BuySellHelper">
            <summary>
            买卖方向帮助器
            </summary>
        </member>
        <member name="M:Ats.Core.BuySellHelper.ConvertEnumBuySell(System.String)">
            <summary>
            转换买卖标志
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:Ats.Core.EnumHelper">
            <summary>
            枚举帮助器
            </summary>
        </member>
        <member name="M:Ats.Core.EnumHelper.ParseEnumBuySell(System.String)">
            <summary>
            解析买卖方向
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.EnumHelper.ParseEnumHedgeFlag(System.String)">
            <summary>
            解析套保标志
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.EnumHelper.ParseEnumMarket(System.String)">
            <summary>
            解析市场
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.EnumHelper.ParseEnumOpenClose(System.String)">
            <summary>
            解析开平
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.EnumHelper.ParseEnumRejectReason(System.String)">
            <summary>
            解析委托拒绝原因
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.EnumHelper.ParseEnumOrderStatus(System.String)">
            <summary>
            解析委托状态
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.EnumHelper.ParseEnumOrderSubmitStatus(System.String)">
            <summary>
            解析委托提交状态
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.EnumHelper.ParseEnumOrderType(System.String)">
            <summary>
            解析委托类型
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.EnumHelper.ParseContingentCondition(System.String)">
            <summary>
            解析触发条件
            目前都是立即执行
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:Ats.Core.EnumDataBase">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="F:Ats.Core.EnumDataBase.SQLServer">
            <summary>
            SQLServer
            </summary>
        </member>
        <member name="F:Ats.Core.EnumDataBase.MySQL">
            <summary>
            MySQL
            </summary>
        </member>
        <member name="F:Ats.Core.EnumDataBase.SQLite">
            <summary>
            SQLite
            </summary>
        </member>
        <member name="F:Ats.Core.EnumDataBase.Oracle">
            <summary>
            Oracle
            </summary>
        </member>
        <member name="T:Ats.Core.EnumRejectReason">
            <summary>
            报单被拒绝原因
            </summary>
        </member>
        <member name="F:Ats.Core.EnumRejectReason.每秒请求超许可数">
            <summary>
            已撤单报单被拒绝综合交易平台：交易所每秒发送请求数超过许可数
            </summary>
        </member>
        <member name="F:Ats.Core.EnumRejectReason.价格非最小单位倍数">
            <summary>
            已撤单报单被拒绝价格非最小单位的倍数
            </summary>
        </member>
        <member name="F:Ats.Core.EnumRejectReason.价格高于涨停板">
            <summary>
            已撤单报单被拒绝价格涨破涨停板
            </summary>
        </member>
        <member name="F:Ats.Core.EnumRejectReason.价格低于跌停板">
            <summary>
            已撤单报单被拒绝价格跌破跌停板
            </summary>
        </member>
        <member name="F:Ats.Core.EnumRejectReason.资金不足">
            <summary>
            综合交易平台：资金不足
            </summary>
        </member>
        <member name="F:Ats.Core.EnumRejectReason.平今仓位不足">
            <summary>
            综合交易平台：平今仓位不足
            </summary>
        </member>
        <member name="F:Ats.Core.EnumRejectReason.平昨仓位不足">
            <summary>
            综合交易平台：平昨仓位不足
            </summary>
        </member>
        <member name="F:Ats.Core.EnumRejectReason.不支持报单类型">
            <summary>
            已撤单报单被拒绝不被支持的报单类型
            </summary>
        </member>
        <member name="F:Ats.Core.EnumRejectReason.不支持套利类型报单">
            <summary>
            该交易所不支持套利类型报单
            </summary>
        </member>
        <member name="F:Ats.Core.EnumRejectReason.保值额度不足">
            <summary>
            已撤单报单被拒绝保值额度不足
            </summary>
        </member>
        <member name="F:Ats.Core.EnumRejectReason.网络连接失败">
            <summary>
            网络连接失败
            </summary>
        </member>
        <member name="F:Ats.Core.EnumRejectReason.延迟开仓被MQ拒绝">
            <summary>
            委托数超过流量限制，MagicQuant拒绝延迟发送开仓单
            </summary>
        </member>
        <member name="F:Ats.Core.EnumRejectReason.MQ暂停开仓">
            <summary>
            MagicQuant暂停发送开仓单XX秒
            </summary>
        </member>
        <!-- 对于成员“F:Ats.Core.EnumRejectReason.报单数量错误”忽略有格式错误的 XML 注释 -->
        <member name="F:Ats.Core.EnumRejectReason.提交委托失败">
            <summary>
            发送委托失败
            </summary>
        </member>
        <member name="F:Ats.Core.EnumRejectReason.未知">
            <summary>
            未知
            </summary>
        </member>
        <member name="T:Ats.Core.EnumSound">
            <summary>
            声音类型
            </summary>
        </member>
        <member name="T:Ats.Core.EnumIndexOption">
            <summary>
            索引选项
            </summary>
        </member>
        <member name="F:Ats.Core.EnumIndexOption.Null">
            <summary>
            如果没有索引，返回-1
            </summary>
        </member>
        <member name="F:Ats.Core.EnumIndexOption.Next">
            <summary>
            如果找不到，向后找
            </summary>
        </member>
        <member name="F:Ats.Core.EnumIndexOption.Prev">
            <summary>
            如果找不到，向前找
            </summary>
        </member>
        <member name="T:Ats.Core.EnumRestoration">
            <summary>
            复权方式
            </summary>
        </member>
        <member name="T:Ats.Core.EnumNetType">
            <summary>
            网络类型
            </summary>
        </member>
        <member name="F:Ats.Core.EnumNetType.UniCom">
            <summary>
            联通
            </summary>
        </member>
        <member name="F:Ats.Core.EnumNetType.TeleCom">
            <summary>
            电信
            </summary>
        </member>
        <member name="T:Ats.Core.FutureMarginRate">
            <summary>
            期货保证金
            </summary>
        </member>
        <member name="F:Ats.Core.FutureMarginRate.InstrumentID">
            <summary>
            合约代码
            </summary>
        </member>
        <member name="F:Ats.Core.FutureMarginRate.BrokerID">
            <summary>
            经纪公司代码
            </summary>
        </member>
        <member name="F:Ats.Core.FutureMarginRate.InvestorID">
            <summary>
            投资者代码
            </summary>
        </member>
        <member name="F:Ats.Core.FutureMarginRate.HedgeFlag">
            <summary>
            投机套保标志
            </summary>
        </member>
        <member name="F:Ats.Core.FutureMarginRate.LongMarginRatioByMoney">
            <summary>
            多头保证金率
            </summary>
        </member>
        <member name="F:Ats.Core.FutureMarginRate.LongMarginRatioByVolume">
            <summary>
            多头保证金费
            </summary>
        </member>
        <member name="F:Ats.Core.FutureMarginRate.ShortMarginRatioByMoney">
            <summary>
            空头保证金率
            </summary>
        </member>
        <member name="F:Ats.Core.FutureMarginRate.ShortMarginRatioByVolume">
            <summary>
            空头保证金费
            </summary>
        </member>
        <member name="F:Ats.Core.FutureMarginRate.IsRelative">
            <summary>
            是否相对交易所收取
            </summary>
        </member>
        <member name="T:Ats.Core.FutureHelper">
            <summary>
            期货辅助函数
            </summary>
        </member>
        <member name="M:Ats.Core.FutureHelper.ContractValue(Ats.Core.Instrument,System.Double,System.Int32)">
            <summary>
            计算期货合约价值
            委托价值=价格*合约单子数量*合约数量乘数
            例如股指期货,价格=3000，开2张单子，合约数量乘数=300
            那么2张合约的价格=3000*2*300=180万
            </summary>
            <param name="future">期货</param>
            <param name="Price">价格</param>
            <param name="Number">合约数</param>
            <returns>合约价值</returns>
        </member>
        <member name="M:Ats.Core.FutureHelper.TrimFuturePrice(Ats.Core.Future,System.Double)">
            <summary>
            获取合理的期货委托价格
            考虑最小价格变动单位
            但是不会考虑涨跌停
            </summary>
            <param name="future">期货</param>
            <param name="orderPrice">委托价格</param>
            <returns>整理后委托价格</returns>
        </member>
        <member name="M:Ats.Core.FutureHelper.TrimFuturePrice(Ats.Core.Instrument,System.Double)">
            <summary>
            获取合理的期货委托价格
            考虑最小价格变动单位
            但是不会考虑涨跌停
            </summary>
            <param name="future">期货</param>
            <param name="orderPrice">委托价格</param>
            <returns>整理后委托价格</returns>
        </member>
        <member name="T:Ats.Core.IChart">
            <summary>
            图形接口V1.0
            </summary>
        </member>
        <member name="M:Ats.Core.IChart.SetupChart(System.Int32,System.DateTime)">
            <summary>
            设置模式
            </summary>
            <param name="Mode">0 K线图 1分时图 2闪电图 3价差图</param>
            <param name="TrdDay">交易日</param>
        </member>
        <member name="M:Ats.Core.IChart.InitBarSeries(Ats.Core.BarSeries)">
            <summary>
            刚载入的时候初始化第一批K线
            </summary>
            <param name="bars"></param>
        </member>
        <member name="M:Ats.Core.IChart.InitTickSeries(Ats.Core.TickSeries)">
            <summary>
            刚载入时初始化第一批Tick
            </summary>
            <param name="bars"></param>
        </member>
        <member name="M:Ats.Core.IChart.OnTick(Ats.Core.Tick)">
            <summary>
            来一个新Tick
            </summary>
            <param name="tick"></param>
        </member>
        <member name="M:Ats.Core.IChart.OnBar(Ats.Core.Bar)">
            <summary>
            一个Bar完成
            </summary>
            <param name="bar"></param>
        </member>
        <member name="M:Ats.Core.IChart.PlotSignal(System.String,System.Double,System.DateTime,Ats.Core.EnumBuySell,Ats.Core.EnumOpenClose,Ats.Core.EnumMarket)">
            <summary>
            显示交易信号
            </summary>
            <param name="InsID">品种带吗</param>
            <param name="price">价格</param>
            <param name="t">时间</param>
            <param name="direction">买卖方向</param>
            <param name="oc">开平</param>
            <param name="market">市场</param>
        </member>
        <member name="T:Ats.Core.MathHelper">
            <summary>
            简单的数学帮助函数
            </summary>
        </member>
        <member name="M:Ats.Core.MathHelper.Constrain(System.Double,System.Double,System.Double)">
            <summary>
            将数据约束在min和max之间
            </summary>
            <param name="x"></param>
            <param name="min"></param>
            <param name="max"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathHelper.Constrain(System.Int32,System.Int32,System.Int32)">
            <summary>
            将数据约束在min和max之间
            </summary>
            <param name="x"></param>
            <param name="min"></param>
            <param name="max"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathHelper.ConvertToInt(System.Double)">
            <summary>
            将double转变成int
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathHelper.ConvertToPercent(System.Double)">
            <summary>
            将double转变为%
            0.04-->4%
            </summary>
            <param name="x">数据</param>
            <returns>百分比字符串</returns>
        </member>
        <member name="M:Ats.Core.MathHelper.Max(System.Double,System.Double,System.Double)">
            <summary>
            求三者最大值
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathHelper.Min(System.Double,System.Double,System.Double)">
            <summary>
            求三者最小值
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathHelper.Max(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            求最大值
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <param name="c"></param>
            <param name="d"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathHelper.Max(System.Double,System.Double,System.Double,System.Double,System.Int32@)">
            <summary>
            求最大值
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <param name="c"></param>
            <param name="d"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathHelper.Min(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            求最小值
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <param name="c"></param>
            <param name="d"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathHelper.Min(System.Double,System.Double,System.Double,System.Double,System.Int32@)">
            <summary>
            求最小值
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <param name="c"></param>
            <param name="d"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathHelper.Min(System.Collections.Generic.List{System.Double})">
            <summary>
            求最小值
            </summary>
            <param name="dataLst"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathHelper.Min(Ats.Core.DataSeries)">
            <summary>
            求最小值
            </summary>
            <param name="dataLst"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathHelper.Min(Ats.Core.ISeries)">
            <summary>
            最小值
            </summary>
            <param name="dataLst"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathHelper.Max(System.Collections.Generic.List{System.Double})">
            <summary>
            求最大值
            </summary>
            <param name="dataLst"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathHelper.Max(Ats.Core.DataSeries)">
            <summary>
            求最大值
            </summary>
            <param name="dataLst"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathHelper.Max(Ats.Core.ISeries)">
            <summary>
            求最大值
            </summary>
            <param name="dataLst"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathHelper.Min(System.Collections.Generic.List{System.Double},System.Int32@)">
            <summary>
            求最小值
            </summary>
            <param name="dataLst"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathHelper.Min(System.Collections.Generic.List{System.Int32},System.Int32@)">
            <summary>
            求最小值
            </summary>
            <param name="dataLst"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathHelper.Min(Ats.Core.DataSeries,System.Int32@)">
            <summary>
            求最小值
            </summary>
            <param name="dataLst"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathHelper.Min(Ats.Core.ISeries,System.Int32@)">
            <summary>
            求最小值
            </summary>
            <param name="dataLst"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathHelper.Max(System.Collections.Generic.List{System.Double},System.Int32@)">
            <summary>
            求最大值
            </summary>
            <param name="dataLst"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathHelper.Max(System.Collections.Generic.List{System.Int32},System.Int32@)">
            <summary>
            求最大值
            </summary>
            <param name="dataLst"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathHelper.Max(Ats.Core.DataSeries,System.Int32@)">
            <summary>
            求最大值
            </summary>
            <param name="dataLst"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathHelper.Max(Ats.Core.ISeries,System.Int32@)">
            <summary>
            求最大值
            </summary>
            <param name="dataLst"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathHelper.Sum(System.Collections.Generic.List{System.Double})">
            <summary>
            求和
            </summary>
            <param name="dataLst"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathHelper.SumSquare(System.Collections.Generic.List{System.Double})">
            <summary>
            求平方和
            </summary>
            <param name="dataLst"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathHelper.Sum(Ats.Core.DataSeries)">
            <summary>
            求和
            </summary>
            <param name="dataLst"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathHelper.Sum(System.Collections.Generic.List{System.Int32})">
            <summary>
            求和
            </summary>
            <param name="dataLst"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathHelper.Sum(Ats.Core.IntSeries)">
            <summary>
            求和
            </summary>
            <param name="dataLst"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathHelper.SumSquare(Ats.Core.DataSeries)">
            <summary>
            求平方和
            </summary>
            <param name="dataLst"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathHelper.Sum(Ats.Core.ISeries)">
            <summary>
            求和
            </summary>
            <param name="dataLst"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathHelper.SumSquare(Ats.Core.ISeries)">
            <summary>
            求平方和
            </summary>
            <param name="dataLst"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathHelper.Sum(System.Double,System.Double,System.Double)">
            <summary>
            求和
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathHelper.SumSquare(System.Double,System.Double,System.Double)">
            <summary>
            求平方和
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathHelper.Average(System.Collections.Generic.List{System.Double})">
            <summary>
            求平均
            </summary>
            <param name="dataLst"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathHelper.Average(System.Double,System.Double,System.Double)">
            <summary>
            求平均
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathHelper.Average(Ats.Core.DataSeries)">
            <summary>
            求平均
            </summary>
            <param name="dataLst"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathHelper.Average(Ats.Core.ISeries)">
            <summary>
            求平均
            </summary>
            <param name="dataLst"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathHelper.Standard(System.Collections.Generic.List{System.Double},System.Int32,System.Int32,System.Double)">
            <summary>
            求标准差,均方差
            </summary>
            <param name="dataLst"></param>
            <param name="start"></param>
            <param name="len"></param>
            <param name="avg"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathHelper.Standard(Ats.Core.DataSeries)">
            <summary>
            计算整个数据序列的标准差
            </summary>
            <param name="dataLst"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathHelper.Standard(Ats.Core.DataSeries,System.Int32,System.Int32,System.Double)">
            <summary>
            求标准差
            </summary>
            <param name="dataLst">数据序列</param>
            <param name="start">开始</param>
            <param name="len">结束</param>
            <param name="avg">均值</param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathHelper.Standard(Ats.Core.ISeries)">
            <summary>
            计算标准差
            </summary>
            <param name="dataLst"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathHelper.Standard(Ats.Core.ISeries,System.Int32,System.Int32,System.Double)">
            <summary>
            求标准差
            </summary>
            <param name="dataLst">数据</param>
            <param name="start">开始</param>
            <param name="len">长度</param>
            <param name="avg">均值</param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathHelper.Divide(System.Int32,System.Int32)">
            <summary>
            将一个整数按照一定步长切割开
            </summary>
            <param name="Length"></param>
            <param name="step"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MathHelper.Equals(System.Double,System.Double)">
            <summary>
            相等
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="T:Ats.Core.SysWarningEventArg">
            <summary>
            系统报警事件
            自成交
            熔断
            </summary>
        </member>
        <member name="F:Ats.Core.SysWarningEventArg.ID">
            <summary>
            系统报警类型
            </summary>
        </member>
        <member name="F:Ats.Core.SysWarningEventArg.AccountID">
            <summary>
            报警相关的账户
            </summary>
        </member>
        <member name="F:Ats.Core.SysWarningEventArg.InstrumentID">
            <summary>
            报警相关的合约
            </summary>
        </member>
        <member name="F:Ats.Core.SysWarningEventArg.WarningMsg">
            <summary>
            报警信息
            </summary>
        </member>
        <member name="T:Ats.Core.SysWarningID">
            <summary>
            系统警告编码
            </summary>
        </member>
        <member name="F:Ats.Core.SysWarningID.自成交">
            <summary>
            自成交
            </summary>
        </member>
        <member name="F:Ats.Core.SysWarningID.交易连接失败">
            <summary>
            交易连接失败
            </summary>
        </member>
        <member name="F:Ats.Core.SysWarningID.行情连接失败">
            <summary>
            行情连接失败
            </summary>
        </member>
        <member name="T:Ats.Core.FundAccountAsset">
            <summary>
            基金资产
            恒生平台内部专用
            </summary>
        </member>
        <member name="F:Ats.Core.FundAccountAsset.AccountCode">
            <summary>
            基金账户编号
            </summary>
        </member>
        <member name="F:Ats.Core.FundAccountAsset.MoneyType">
            <summary>
            币种
            </summary>
        </member>
        <member name="F:Ats.Core.FundAccountAsset.TotalAsset">
            <summary>
            总资产
            </summary>
        </member>
        <member name="F:Ats.Core.FundAccountAsset.Nav">
            <summary>
            基金单位净值
            </summary>
        </member>
        <member name="F:Ats.Core.FundAccountAsset.PreNav">
            <summary>
            昨日单位净值
            </summary>
        </member>
        <member name="F:Ats.Core.FundAccountAsset.CurrentBalance">
            <summary>
            当前资金余额
            </summary>
        </member>
        <member name="F:Ats.Core.FundAccountAsset.BeginBalance">
            <summary>
            期初资金余额
            </summary>
        </member>
        <member name="F:Ats.Core.FundAccountAsset.DepositBalance">
            <summary>
            期货保证金账户余额
            </summary>
        </member>
        <member name="F:Ats.Core.FundAccountAsset.OccupyDepositBalance">
            <summary>
            期货占用保证金
            </summary>
        </member>
        <member name="F:Ats.Core.FundAccountAsset.FutureAsset">
            <summary>
            期货资产（合约价值）
            </summary>
        </member>
        <member name="F:Ats.Core.FundAccountAsset.StockAsset">
            <summary>
            股票资产
            </summary>
        </member>
        <member name="F:Ats.Core.FundAccountAsset.FundAsset">
            <summary>
            基金资产（持有的基金的资产）
            </summary>
        </member>
        <member name="F:Ats.Core.FundAccountAsset.RepoAsset">
            <summary>
            回购资产
            </summary>
        </member>
        <member name="F:Ats.Core.FundAccountAsset.OtherAsset">
            <summary>
            其它资产
            </summary>
        </member>
        <member name="F:Ats.Core.FundAccountAsset.FundShare">
            <summary>
            基金总份额
            </summary>
        </member>
        <member name="F:Ats.Core.FundAccountAsset.FundNetAsset">
            <summary>
            基金净资产
            </summary>
        </member>
        <member name="F:Ats.Core.FundAccountAsset.PayalbeBalance">
            <summary>
            应付款
            </summary>
        </member>
        <member name="F:Ats.Core.FundAccountAsset.ReveivableBalance">
            <summary>
            应收款
            </summary>
        </member>
        <member name="T:Ats.Core.AtsConstant">
            <summary>
            通用的常数
            </summary>
        </member>
        <member name="F:Ats.Core.AtsConstant.MinDouble">
            <summary>
            容差
            用来避免double精度问题
            </summary>
        </member>
        <member name="F:Ats.Core.AtsConstant.QL_Epsilon">
            <summary>
            数学上极小值
            </summary>
        </member>
        <member name="F:Ats.Core.AtsConstant.M_SQRT_2">
            <summary>
            根号2
            </summary>
        </member>
        <member name="F:Ats.Core.AtsConstant.M_1_SQRTPI">
            <summary>
            1/根号PI
            </summary>
        </member>
        <member name="F:Ats.Core.AtsConstant.M_LN2">
            <summary>
            Ln(2)
            </summary>
        </member>
        <member name="F:Ats.Core.AtsConstant.M_PI">
            <summary>
            圆周率PI
            </summary>
        </member>
        <member name="F:Ats.Core.AtsConstant.M_PI_2">
            <summary>
            PI/2
            </summary>
        </member>
        <member name="M:Ats.Core.AtsConstant.IsPositive(System.Double)">
            <summary>
            是正数
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.AtsConstant.IsNegative(System.Double)">
            <summary>
            是负数
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="T:Ats.Core.IConfigUI">
            <summary>
            配置UI控件
            </summary>
        </member>
        <member name="M:Ats.Core.IConfigUI.LoadConfig">
            <summary>
            载入配置
            </summary>
        </member>
        <member name="M:Ats.Core.IConfigUI.SaveConfig">
            <summary>
            保存配置
            </summary>
        </member>
        <member name="F:Ats.Core.InstrumentSeries._idx">
            <summary>
            品种的位置
            </summary>
        </member>
        <member name="F:Ats.Core.InstrumentSeries._instruments">
            <summary>
            品种列表
            </summary>
        </member>
        <member name="M:Ats.Core.InstrumentSeries.Contains(System.String)">
            <summary>
            是否包含品种
            </summary>
            <param name="InstrumentID">品种代码</param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.InstrumentSeries.Add(Ats.Core.Instrument)">
            <summary>
            队列中加入品种
            </summary>
            <param name="InstrumentID"></param>
        </member>
        <member name="P:Ats.Core.InstrumentSeries.Item(System.String)">
            <summary>
            根据代码索引品种
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="P:Ats.Core.InstrumentSeries.Item(System.Int32)">
            <summary>
            根据位置索引品种
            </summary>
            <param name="idx"></param>
            <returns></returns>
        </member>
        <member name="P:Ats.Core.InstrumentSeries.Count">
            <summary>
            品种个数
            </summary>
        </member>
        <member name="P:Ats.Core.InstrumentSeries.First">
            <summary>
            第一个品种
            </summary>
        </member>
        <member name="P:Ats.Core.InstrumentSeries.Last">
            <summary>
            最后一个品种
            </summary>
        </member>
        <member name="T:Ats.Core.IntSeries">
            <summary>
            整型数字序列
            </summary>
        </member>
        <member name="T:Ats.Core.AtsList`1">
            <summary>
            对象序列
            </summary>
            <typeparam name="T">对象类型</typeparam>
        </member>
        <member name="M:Ats.Core.AtsList`1.Ago(System.Int32)">
            <summary>
            从序列末位向前获取对象。
            n取值 : 0 -- 最后一个对象；1 -- 倒数第二个对象 
            如果回溯过长，则返回第一个，避免程序中止
            </summary>
            <param name="n">向前索引</param>
            <returns>向前第n个对象</returns>
        </member>
        <member name="M:Ats.Core.AtsList`1.AgoSub(System.Int32)">
            <summary>
            从序列末位向前获取子集
            n取值 : 0 -- 最后一个对象；1 -- 倒数第二个对象
            </summary>
            <param name="n">向前索引</param>
            <returns>向前第n个对象</returns>
        </member>
        <member name="M:Ats.Core.AtsList`1.AgoSub(System.Int32,System.Int32)">
            <summary>
            回溯倒数第N到倒数第M个数字
            </summary>
            <param name="N"></param>
            <param name="M"></param>
            <returns></returns>
        </member>
        <member name="P:Ats.Core.AtsList`1.First">
            <summary>
            第一个对象
            </summary>
        </member>
        <member name="P:Ats.Core.AtsList`1.Last">
            <summary>
            最后一个对象
            </summary>
        </member>
        <member name="P:Ats.Core.AtsList`1.LastIndex">
            <summary>
            最后一个对象的索引
            </summary>
        </member>
        <member name="M:Ats.Core.IntSeries.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Ats.Core.IntSeries.#ctor(System.Collections.Generic.List{System.Int32})">
            <summary>
            构造函数
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Ats.Core.IntSeries.AgoSub(System.Int32)">
            <summary>
            从序列末位向前获取子集
            n取值 : 0 -- 最后一个对象；1 -- 倒数第二个对象
            </summary>
            <param name="n">回溯N</param>
            <returns>数据集</returns>
        </member>
        <member name="M:Ats.Core.IntSeries.NthConLessThan(System.Int32,System.Int32)">
            <summary>
            第N个满足条件的数值距最后一个数的偏移值
            </summary>
            <param name="x"></param>
            <param name="N">求第N个满足条件中的N值，N = 1表示最近的一个，N = 2 为倒数第二个</param>
            <returns>0就是最后一个数,即Ago(0)；1倒数第2个，即Ago(1)；-1说明没有满足条件的</returns>
        </member>
        <member name="T:Ats.Core.LockObject">
            <summary>
            锁对象
            </summary>
        </member>
        <member name="T:Ats.Core.Method">
            <summary>
            通用方法
            </summary>
        </member>
        <member name="M:Ats.Core.Method.IsCompleted(Ats.Core.EnumMQOrderStatus)">
            <summary>
            判断是否终态
            </summary>
            <param name="orderStatus">委托的MQStatus</param>
            <returns>True终态 False非终态</returns>
        </member>
        <member name="T:Ats.Core.MQDictionary`2">
            <summary>
            MQ字典
            可以通过序列化传输
            </summary>
            <typeparam name="TKey">键</typeparam>
            <typeparam name="TValue">值</typeparam>
        </member>
        <member name="M:Ats.Core.MQDictionary`2.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Ats.Core.MQDictionary`2.GetSchema">
            <summary>
            获取Schema
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.MQDictionary`2.ReadXml(System.Xml.XmlReader)">
            <summary>
            读取XML
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Ats.Core.MQDictionary`2.WriteXml(System.Xml.XmlWriter)">
            <summary>
            写XML
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:Ats.Core.MQMessage">
            <summary>
            MQ消息
            </summary>
        </member>
        <member name="F:Ats.Core.MQMessage.RouteID">
            <summary>
            路由ID
            </summary>
        </member>
        <member name="F:Ats.Core.MQMessage.RequestID">
            <summary>
            请求编号
            每个消息不重复
            </summary>        
        </member>
        <member name="F:Ats.Core.MQMessage.RefRequestID">
            <summary>
            关联请求消息号
            </summary>        
        </member>
        <member name="F:Ats.Core.MQMessage.MesGUID">
            <summary>
            消息GUID
            每一个消息有一个自己的GUID
            </summary>        
        </member>
        <member name="F:Ats.Core.MQMessage.MesName">
            <summary>
            消息名称
            </summary> 
        </member>
        <member name="F:Ats.Core.MQMessage.Description">
            <summary>
            消息描述
            </summary>        
        </member>
        <member name="F:Ats.Core.MQMessage.Version">
            <summary>
            版本号
            </summary>        
        </member>
        <member name="F:Ats.Core.MQMessage.UserName">
            <summary>
            用户名
            </summary>        
        </member>
        <member name="F:Ats.Core.MQMessage.Token">
            <summary>
            消息的令牌
            </summary>        
        </member>
        <member name="F:Ats.Core.MQMessage.CreateTime">
            <summary>
            消息创建时间
            </summary>        
        </member>
        <member name="F:Ats.Core.MQMessage.TimeOut">
            <summary>
            超时
            单位:秒
            </summary>
        </member>
        <member name="F:Ats.Core.MQMessage._type">
            <summary>
            消息类型
            </summary>
        </member>
        <member name="F:Ats.Core.MQMessage.CommunicationMode">
            <summary>
            通信模式
            True 异步
            False 同步
            </summary>
        </member>
        <member name="F:Ats.Core.MQMessage.PlatformName">
            <summary>
            平台
            </summary>
        </member>
        <member name="M:Ats.Core.MQMessage.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Ats.Core.MQMessage.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="_Type">消息号</param>
        </member>
        <member name="M:Ats.Core.MQMessage.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="_Type">消息号</param>
        </member>
        <member name="M:Ats.Core.MQMessage.ToString">
            <summary>
            字符串
            </summary>
            <returns>消息信息</returns>
        </member>
        <member name="P:Ats.Core.MQMessage.Type">
            <summary>
            消息内容ID
            标志该消息的内容
            一个消息类一个ID
            </summary>
        </member>
        <member name="T:Ats.Core.OrderTag">
            <summary>
            委托标志
            能唯一识别一个委托
            </summary>
        </member>
        <member name="F:Ats.Core.OrderTag.OrderGUID">
            <summary>
            委托GUID
            </summary>
        </member>
        <member name="F:Ats.Core.OrderTag.Market">
            <summary>
            市场
            </summary>
        </member>
        <member name="F:Ats.Core.OrderTag.LogAccountID">
            <summary>
            账户ID
            </summary>
        </member>
        <member name="M:Ats.Core.OrderTag.#ctor(Ats.Core.Order)">
            <summary>
            构造函数
            </summary>
            <param name="order"></param>
        </member>
        <member name="T:Ats.Core.PositionDetail">
            <summary>
            持仓明细
            </summary>
        </member>
        <member name="P:Ats.Core.PositionDetail.ExchangeID">
            <summary>
            交易所ID
            这个是新加的，注意维护
            </summary>
        </member>
        <member name="P:Ats.Core.PositionDetail.InstrumentType">
            <summary>
            品种类型：股票、期货
            </summary>
        </member>
        <member name="P:Ats.Core.PositionDetail.InstrumentID">
            <summary>
            合约代码
            </summary>
        </member>
        <member name="P:Ats.Core.PositionDetail.BrokerID">
            <summary>
            经纪公司代码
            </summary>
        </member>
        <member name="P:Ats.Core.PositionDetail.InvestorID">
            <summary>
            投资者代码
            等效于股票的StockAccountNo
            </summary>
        </member>
        <member name="P:Ats.Core.PositionDetail.PosiDirection">
            <summary>
            持仓多空方向
            </summary>
        </member>
        <member name="P:Ats.Core.PositionDetail.HedgeFlag">
            <summary>
            投机套保标志
            </summary>
        </member>
        <member name="P:Ats.Core.PositionDetail.OpenTime">
            <summary>
            开仓时间
            </summary>
        </member>
        <member name="P:Ats.Core.PositionDetail.TradeID">
            <summary>
            成交编号
            </summary>
        </member>
        <member name="P:Ats.Core.PositionDetail.Volume">
            <summary>
            总持仓量=最终的净持仓总量
            </summary>
        </member>
        <member name="P:Ats.Core.PositionDetail.OpenPrice">
            <summary>
            开仓价格
            </summary>
        </member>
        <member name="P:Ats.Core.PositionDetail.Margin">
            <summary>
            保证金
            </summary>
        </member>
        <member name="P:Ats.Core.PositionDetail.PreSettlementPrice">
            <summary>
            昨天的结算价
            </summary>
        </member>
        <member name="P:Ats.Core.PositionDetail.SettlementPrice">
            <summary>
            今天的结算价
            </summary>
        </member>
        <member name="P:Ats.Core.PositionDetail.CloseProfitByDate">
            <summary>
            逐日盯市平仓盈亏
            </summary>
        </member>
        <member name="P:Ats.Core.PositionDetail.CloseProfitByTrade">
            <summary>
            逐笔对冲平仓盈亏
            </summary>
        </member>
        <member name="P:Ats.Core.PositionDetail.PositionProfitByDate">
            <summary>
            逐日盯市持仓盈亏
            </summary>
        </member>
        <member name="P:Ats.Core.PositionDetail.PositionProfitByTrade">
            <summary>
            逐笔对冲持仓盈亏
            </summary>
        </member>
        <member name="P:Ats.Core.PositionDetail.Commision">
            <summary>
            手续费
            </summary>
        </member>
        <member name="P:Ats.Core.PositionDetail.Price">
            <summary>
            现价 
            </summary>
        </member>
        <member name="T:Ats.Core.SortDictionary">
            <summary>
            排序字典
            支持根据数值自动排序
            </summary>
        </member>
        <member name="F:Ats.Core.SortDictionary.Ascending">
            <summary>
            是否递增
            </summary>
        </member>
        <member name="F:Ats.Core.SortDictionary.Compare">
            <summary>
            比较器
            </summary>
        </member>
        <member name="F:Ats.Core.SortDictionary.Precision">
            <summary>
            最小价格变动单位
            </summary>
        </member>
        <member name="F:Ats.Core.SortDictionary.GridList">
            <summary>
            按照跳排列的序列
            </summary>
        </member>
        <member name="F:Ats.Core.SortDictionary.codeDict">
            <summary>
            数值字典
            键：价格跳
            值:数值
            </summary> 
        </member>
        <member name="F:Ats.Core.SortDictionary.MinDouble">
            <summary>
            很小的数据
            </summary>
        </member>
        <member name="M:Ats.Core.SortDictionary.#ctor(System.Double,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="_precision">分辨率-价格最小变动单位</param>
            <param name="_Ascending">True从小到大,False从大到小</param>
        </member>
        <member name="M:Ats.Core.SortDictionary.Add(System.String,System.Double)">
            <summary>
            添加一个数据
            </summary>
            <param name="code"></param>
            <param name="value"></param>
        </member>
        <member name="M:Ats.Core.SortDictionary.GetPriceKey(System.Double)">
            <summary>
            计算价格的整数值
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.SortDictionary.RemoveAt(System.Int32)">
            <summary>
            移除第N个Order
            </summary>
            <param name="index">索引</param>
        </member>
        <member name="M:Ats.Core.SortDictionary.Remove(System.Double)">
            <summary>
            移除
            </summary>
            <param name="Price"></param>
        </member>
        <member name="M:Ats.Core.SortDictionary.Clear">
            <summary>
            清空数据
            </summary>
        </member>
        <member name="M:Ats.Core.SortDictionary.Conatains(System.Double)">
            <summary>
            是否包含
            </summary>
            <param name="OrdPrice">委托价格</param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.SortDictionary.ToStringList">
            <summary>
            数据字典的内容
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.SortDictionary.GetSortedCode">
            <summary>
            获取排好序的股票代码
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.SortDictionary.GetValueByCode(System.String)">
            <summary>
            根据代码找到对应的值
            </summary>
            <param name="stockCode"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.SortDictionary.MyConpare(System.Int32,System.Int32)">
            <summary>
            比较器
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="P:Ats.Core.SortDictionary.Count">
            <summary>
            总数
            </summary>
        </member>
        <member name="P:Ats.Core.SortDictionary.Item(System.Int32)">
            <summary>
            第N个
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Ats.Core.SortDictionary.Item(System.Double)">
            <summary>
            用价格索引
            </summary>
            <param name="Price"></param>
            <returns></returns>
        </member>
        <member name="P:Ats.Core.SortDictionary.First">
            <summary>
            第一个
            </summary>
        </member>
        <member name="P:Ats.Core.SortDictionary.Last">
            <summary>
            最后一个
            </summary>
        </member>
        <member name="T:Ats.Core.StringSeries">
            <summary>
            字符串数组
            </summary>
        </member>
        <member name="M:Ats.Core.StringSeries.Clone">
            <summary>
            克隆一份拷贝
            </summary>
            <returns></returns>
        </member>
        <member name="T:Ats.Core.TimeSeries">
            <summary>
            时间序列
            </summary>
        </member>
        <member name="M:Ats.Core.TimeSeries.Contains(System.DateTime)">
            <summary>
            是否包含时刻
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.TimeSeries.Clone">
            <summary>
            克隆整个序列
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.TimeSeries.GetDateTime(System.Int32)">
            <summary>
            给定index-得出当前这个位置时刻
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.TimeSeries.GetIndex(System.DateTime)">
            <summary>
            根据时间直接定位到对应K线的index
            如果找不到，返回-1
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="P:Ats.Core.TimeSeries.Item(System.DateTime)">
            <summary>
            根据时间直接索引
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="T:Ats.Core.Strategy">
            <summary>
            策略基类
            </summary>
        </member>
        <member name="T:Ats.Core.IStrategy">
            <summary>
            策略接口
            </summary>
        </member>
        <member name="M:Ats.Core.IStrategy.Init">
            <summary>
            初始化
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.IStrategy.Exit">
            <summary>
            结束退出
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.IStrategy.OnTick(Ats.Core.Tick)">
            <summary>
            Tick到来
            </summary>
            <param name="tick"></param>
        </member>
        <member name="M:Ats.Core.IStrategy.OnBar(Ats.Core.Bar)">
            <summary>
            Bar完成
            </summary>
            <param name="bar"></param>
        </member>
        <member name="M:Ats.Core.IStrategy.OnBarOpen(Ats.Core.Bar)">
            <summary>
            新的一根Bar到来时触发
            </summary>
            <param name="bar"></param>
        </member>
        <member name="M:Ats.Core.IStrategy.OnOrder(Ats.Core.Order)">
            <summary>
            委托回报
            </summary>
            <param name="order"></param>
        </member>
        <member name="M:Ats.Core.IStrategy.OnOrderRejected(Ats.Core.Order)">
            <summary>
            委托拒绝回报
            </summary>
            <param name="order">委托</param>
        </member>
        <member name="M:Ats.Core.IStrategy.OnTrade(Ats.Core.Trade)">
            <summary>
            成交回报
            </summary>
            <param name="trade"></param>
        </member>
        <member name="M:Ats.Core.IStrategy.OnCancelOrderFailed(System.String,System.String)">
            <summary>
            撤单失败
            </summary>
            <param name="orderGuid"></param>
            <param name="msg"></param>
        </member>
        <member name="M:Ats.Core.IStrategy.OnOrderCanceled(Ats.Core.Order)">
            <summary>
            撤单成功回报
            </summary>
            <param name="order"></param>
        </member>
        <member name="M:Ats.Core.IStrategy.OnSysWarning(Ats.Core.SysWarningEventArg)">
            <summary>
            系统警告
            </summary>
            <param name="arg"></param>
        </member>
        <member name="P:Ats.Core.IStrategy.MyUI">
            <summary>
            返回一个用户控件
            </summary>
            <returns></returns>
        </member>
        <member name="F:Ats.Core.Strategy.MinDouble">
            <summary>
            极小的Double
            主要用于安全的大小比较
            </summary>
        </member>
        <member name="F:Ats.Core.Strategy.Topic">
            <summary>
            消息主题
            用于收发消息
            </summary>
        </member>
        <member name="F:Ats.Core.Strategy._fuction">
            <summary>
            功能提供器
            </summary>
        </member>
        <member name="M:Ats.Core.Strategy.Init">
            <summary>
            策略初始化事件
            相当于OnStart
            </summary>
        </member>
        <member name="M:Ats.Core.Strategy.Exit">
            <summary>
            策略退出事件
            相当于OnStop
            </summary>
        </member>
        <member name="M:Ats.Core.Strategy.OnTick(Ats.Core.Tick)">
            <summary>
            Tick触发
            </summary>
            <param name="tick">Tick</param>
        </member>
        <member name="M:Ats.Core.Strategy.OnAllTicks(System.Collections.Generic.Dictionary{System.String,Ats.Core.Tick})">
            <summary>
            所有品种都到了触发
            </summary>
            <param name="buffer">所有工程订阅的品种的行情</param>
        </member>
        <member name="M:Ats.Core.Strategy.OnBar(Ats.Core.Bar)">
            <summary>
            Bar结束触发
            </summary>
            <param name="bar">Bar</param>
        </member>
        <member name="M:Ats.Core.Strategy.OnBarOpen(Ats.Core.Bar)">
            <summary>
            新到来一根Bar触发
            </summary>
            <param name="bar">Bar</param>
        </member>
        <member name="M:Ats.Core.Strategy.OnOrder(Ats.Core.Order)">
            <summary>
            委托状态改变事件
            </summary>
            <param name="order">委托</param>
        </member>
        <member name="M:Ats.Core.Strategy.OnOrderRejected(Ats.Core.Order)">
            <summary>
            委托被拒绝时触发
            </summary>
            <param name="order">被拒绝的委托</param>
        </member>
        <member name="M:Ats.Core.Strategy.OnTrade(Ats.Core.Trade)">
            <summary>
            成交回报事件
            </summary>
            <param name="trade">成交回报</param>
        </member>
        <member name="M:Ats.Core.Strategy.OnOrderCanceled(Ats.Core.Order)">
            <summary>
            撤单成功回报事件
            </summary>
            <param name="order">期货委托</param>
        </member>
        <member name="M:Ats.Core.Strategy.OnCancelOrderFailed(System.String,System.String)">
            <summary>
            委托撤单失败
            </summary>
            <param name="orderGuid">委托Guid</param>
            <param name="msg">撤单失败原因</param>
        </member>
        <member name="M:Ats.Core.Strategy.OnSysWarning(Ats.Core.SysWarningEventArg)">
            <summary>
            系统警告事件
            </summary>
            <param name="arg">报警参数</param>
        </member>
        <member name="M:Ats.Core.Strategy.SendStockBasket(Ats.Core.StockBasket)">
            <summary>
            提交一个股票篮子委托
            </summary>
            <param name="basket"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.Strategy.SendStockBasket(System.String,Ats.Core.StockBasket)">
            <summary>
            提交一个股票篮子委托
            </summary>
            <param name="logAccountID">账户</param>
            <param name="basket">篮子</param>
            <returns>提交是否成功</returns>
        </member>
        <member name="M:Ats.Core.Strategy.GetStockBasket(System.String)">
            <summary>
            根据ID查询篮子
            </summary>
            <param name="basketID">篮子ID</param>
            <returns>篮子</returns>
        </member>
        <member name="M:Ats.Core.Strategy.GetAllStockBaskets">
            <summary>
            查询所有篮子
            </summary>
            <returns>所有篮子</returns>
        </member>
        <member name="M:Ats.Core.Strategy.CancelStockBasket(System.String,System.String)">
            <summary>
            撤篮子
            </summary>
            <param name="basketId">篮子ID</param>
            <param name="stockCode">如果为空，撤整个篮子,如果不为空，撤篮子中的单个明细</param>
        </member>
        <member name="M:Ats.Core.Strategy.StartTimer(System.Int32,System.Threading.TimerCallback,System.String)">
            <summary>
            启动时钟任务
            </summary>
            <param name="Millisecond">时钟任务间隔（单位:毫秒）</param>
            <param name="Callback">定时任务的执行回调函数</param>
            <returns>该定时任务的ID</returns>
        </member>
        <member name="M:Ats.Core.Strategy.StopTimer(System.String)">
            <summary>
            停止时钟任务
            </summary>
            <param name="timerId">时钟任务ID</param>
        </member>
        <member name="M:Ats.Core.Strategy.GetAllTimerIDs">
            <summary>
            获取所有时钟任务的ID
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.Strategy.GetExchange(Ats.Core.EnumExchange)">
            <summary>
            获取交易所
            </summary>
            <param name="exch">交易所</param>
            <returns>交易所</returns>
        </member>
        <member name="M:Ats.Core.Strategy.GetExchange(System.String)">
            <summary>
            获取交易所
            </summary>
            <param name="ExchangeID">交易所ID</param>
            <returns>交易所</returns>
        </member>
        <member name="M:Ats.Core.Strategy.GetExchangeTime(Ats.Core.EnumExchange)">
            <summary>
            交易所当前时间
            </summary>
            <param name="exchange">交易所</param>
            <returns>时间</returns>
        </member>
        <member name="M:Ats.Core.Strategy.GetInstrumentTradingTime(System.String)">
            <summary>
            获取品种的交易时段
            </summary>
            <param name="instrumentId">品种</param> 
            <returns>交易时段</returns>
        </member>
        <member name="M:Ats.Core.Strategy.GetTickBuffer">
            <summary>
            获取驱动品种的Tick缓存
            </summary>
            <returns>Tick缓存</returns>
        </member>
        <member name="M:Ats.Core.Strategy.GetPriceBuffer">
            <summary>
            驱动品种的价格缓存
            </summary>
            <returns>价格缓存</returns>
        </member>
        <member name="M:Ats.Core.Strategy.LastFuturePrice">
            <summary>
            默认期货品种的最新价格
            </summary>
            <returns>最新价格</returns>
        </member>
        <member name="M:Ats.Core.Strategy.LastFuturePrice(System.String)">
            <summary>
            获取最新的期货价格
            </summary>
            <param name="FutureCode">期货代码</param>
            <returns>最新价格</returns>
        </member>
        <member name="M:Ats.Core.Strategy.LastFutureTick">
            <summary>
            默认期货的最新Tick
            </summary>
            <returns>期货Tick</returns>
        </member>
        <member name="M:Ats.Core.Strategy.LastFutureTick(System.String)">
            <summary>
            最新的期货Tick
            </summary>
            <param name="FutureCode">期货代码</param>
            <returns>期货Tick</returns>
        </member>
        <member name="M:Ats.Core.Strategy.LastStockPrice">
            <summary>
            默认股票的最新价格
            </summary>
            <returns>价格</returns>
        </member>
        <member name="M:Ats.Core.Strategy.LastStockPrice(System.String)">
            <summary>
            指定股票的最新价格
            </summary>
            <param name="StockCode">股票代码</param>
            <returns>价格</returns>
        </member>
        <member name="M:Ats.Core.Strategy.LastStockTick">
            <summary>
            默认股票的最新Tick
            </summary>
            <returns>股票Tick</returns>
        </member>
        <member name="M:Ats.Core.Strategy.LastStockTick(System.String)">
            <summary>
            指定股票的最新Tick
            </summary>
            <param name="StockCode">股票代码</param>
            <returns>股票Tick</returns>
        </member>
        <member name="M:Ats.Core.Strategy.BookInstrument(Ats.Core.EnumMarket,System.String)">
            <summary>
            订阅
            </summary>
            <param name="market">市场</param>
            <param name="instrumentId">品种ID</param>
        </member>
        <member name="M:Ats.Core.Strategy.UnBookInstrument(Ats.Core.EnumMarket,System.String)">
            <summary>
            取消订阅
            </summary>
            <param name="market">市场</param>
            <param name="instrumentId">品种ID</param>
        </member>
        <member name="M:Ats.Core.Strategy.AgoPrice(Ats.Core.EnumMarket,System.Int32)">
            <summary>
            回溯默认品种价格
            </summary>
            <param name="market">品种类型</param>
            <param name="AgoN">回溯N,0表示最新价格</param>
            <returns>价格</returns>
        </member>
        <member name="M:Ats.Core.Strategy.AgoPrice(Ats.Core.EnumMarket,System.String,System.Int32)">
            <summary>
            回溯指定品种价格
            </summary>
            <param name="market"></param>
            <param name="InsID"></param>
            <param name="AgoN"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.Strategy.AgoTick(Ats.Core.EnumMarket,System.Int32)">
            <summary>
            回溯默认品种Tick
            </summary>
            <param name="market">品种类型</param>
            <param name="AgoN">回溯N,0表示最新的Tick</param>
            <returns>返回Tick</returns>
        </member>
        <member name="M:Ats.Core.Strategy.AgoTick(Ats.Core.EnumMarket,System.String,System.Int32)">
            <summary>
            回溯指定品种Tick
            </summary>
            <param name="market">品种类型</param>
            <param name="InsID">品种代码</param>
            <param name="AgoN">回溯N,0表示最新的Tick</param>
            <returns>返回Tick</returns>
        </member>
        <member name="M:Ats.Core.Strategy.GetStockDivide(System.String,System.DateTime,System.DateTime)">
            <summary>
            查询股票除权信息
            </summary>
            <param name="StockCode">股票代码</param>
            <param name="from">起始时间</param>
            <param name="to">结束时间</param>
            <returns>除权信息列表</returns>
        </member>
        <member name="M:Ats.Core.Strategy.GetStockDivide(System.String,System.DateTime)">
            <summary>
            查询股票某个交易日的除权信息
            </summary>
            <param name="StockCode">股票代码</param>
            <param name="tradingDay">交易日</param>
            <returns>除权除息列表</returns>
        </member>
        <member name="M:Ats.Core.Strategy.LoadTickSeries(Ats.Core.EnumMarket,System.String,System.String,System.DateTime)">
            <summary>
            静态载入某一天的历史Tick
            </summary>
            <param name="market">市场</param>
            <param name="insID">品种代码</param>
            <param name="exchangId">交易所ID</param>
            <param name="tradingDay">交易日</param>
            <returns>Tick数据</returns>
        </member>
        <member name="M:Ats.Core.Strategy.LoadMinuteBarSeries(Ats.Core.EnumMarket,System.String,System.DateTime,System.DateTime,Ats.Core.EnumRestoration)">
            <summary>
            静态载入指定时间范围内的1分钟线
            MQ不动态维护，使用完后释放内存
            </summary>
            <param name="market">市场</param>
            <param name="InsID">品种代码</param>
            <param name="beginTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <param name="restore">复权方式</param>
            <returns>K线</returns>
        </member>
        <member name="M:Ats.Core.Strategy.LoadMinuteBarSeries(Ats.Core.EnumMarket,System.String,System.DateTime)">
            <summary>
            静态载入历史上某一天的1分钟线
            MQ不动态维护，使用完后释放内存
            </summary>
            <param name="market"></param>
            <param name="insID"></param> 
            <param name="tradingDay"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.Strategy.GetBarSeries(Ats.Core.EnumMarket,System.String,System.Int32,Ats.Core.EnumBarType,System.Int32,Ats.Core.EnumRestoration)">
            <summary>
            获取K线
            </summary>
            <param name="market">市场</param>
            <param name="instrumentID">合约ID</param>
            <param name="Interval">周期</param>
            <param name="bar">K线类型</param>
            <param name="MaxLength">回溯长度</param>
            <param name="restore">复权方式</param>
            <returns>K线</returns>
        </member>
        <member name="M:Ats.Core.Strategy.GetBarSeries(Ats.Core.EnumMarket,System.String,System.Int32,Ats.Core.EnumBarType,System.DateTime,Ats.Core.EnumRestoration)">
            <summary>
            获取K线
            </summary>
            <param name="market">市场</param>
            <param name="instrumentID">合约ID</param>
            <param name="Interval">周期</param>
            <param name="bar">K线类型</param>
            <param name="beginTime">开始时间-自然时间</param>
            <param name="restore">复权方式</param>
            <returns>K线</returns>
        </member>
        <member name="M:Ats.Core.Strategy.CheckIfBookInstrument(Ats.Core.EnumMarket,System.String)">
            <summary>
            检查策略是否订阅了合约
            </summary>
            <param name="market">市场</param>
            <param name="instrumentID">品种代码</param>
            <returns>是否订阅</returns>
        </member>
        <member name="M:Ats.Core.Strategy.SendOrder(System.String,System.String,Ats.Core.EnumMarket,System.String,System.Double,System.Int32,Ats.Core.EnumBuySell,Ats.Core.EnumOpenClose,Ats.Core.EnumOrderPriceType,Ats.Core.EnumOrderTimeForce,Ats.Core.EnumHedgeFlag)">
            <summary>
            下单(期货，股票，期权)
            </summary>
            <param name="logAccountId">逻辑账户ID</param>
            <param name="instrumentId">品种ID</param>
            <param name="market">市场</param>
            <param name="exchangeId">交易所ID</param>
            <param name="limitPrice">价格</param>
            <param name="volume">数量</param>
            <param name="direction">买卖方向</param>
            <param name="openClose">开平标志</param>
            <param name="priceType">价格类型</param>
            <param name="timeForce">时间类型</param>
            <param name="hedgeFlag">套保标志</param> 
            <returns>委托</returns>
        </member>
        <member name="M:Ats.Core.Strategy.GetOrderByTrade(Ats.Core.Trade)">
            <summary>
            根据成交查找对应的委托
            </summary>
            <param name="trade">成交</param>
            <returns>委托</returns>
        </member>
        <member name="M:Ats.Core.Strategy.GetOrder(System.String)">
            <summary>
            在本地内存查询委托
            </summary>
            <param name="OrdGUID">委托ID</param>
            <returns>委托</returns>
        </member>
        <member name="M:Ats.Core.Strategy.CancelOrder(System.String)">
            <summary>
            撤单
            </summary>
            <param name="orderGuid">委托GUID</param>
        </member>
        <member name="M:Ats.Core.Strategy.CancelOrder(Ats.Core.EnumMarket,System.String,System.String)">
            <summary>
            撤单
            </summary>
            <param name="market">市场</param>
            <param name="orderGuid">委托本地GUID</param>
            <param name="logAccountID">账户ID</param>
        </member>
        <member name="M:Ats.Core.Strategy.CancelOrder(Ats.Core.Order)">
            <summary>
            直接撤单
            策略自己的
            </summary>
            <param name="order">委托实例本身</param>
        </member>
        <member name="M:Ats.Core.Strategy.ACancelOrder(Ats.Core.Order)">
            <summary>
            撤单
            不一定是策略自己的委托
            注意用ACancelOrder撤单没有撤单成功回报
            </summary>
            <param name="order">委托</param>
        </member>
        <member name="M:Ats.Core.Strategy.GetOrders(Ats.Core.EnumMarket,System.String)">
            <summary>
            在本地内存查询所有委托
            </summary>
            <param name="market">市场</param>
            <param name="LogAccountID"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.Strategy.GetCanCancelOrders(Ats.Core.EnumMarket,System.String)">
            <summary>
            在本地内存查询可撤单列表
            </summary>
            <param name="market">市场</param>
            <param name="LogAccount">账户ID</param>
            <returns>可撤单列表</returns>
        </member>
        <member name="M:Ats.Core.Strategy.GetCanCancelOrders(Ats.Core.EnumMarket)">
            <summary>
            在本地内存查询可撤单列表（默认账户）
            </summary>
            <param name="market">市场</param>
            <returns>可撤单列表</returns>
        </member>
        <member name="M:Ats.Core.Strategy.GetTrades(Ats.Core.EnumMarket,System.String)">
            <summary>
            在本地内存查询成交
            只能查询策略自己的成交
            </summary>
            <param name="market">市场</param>
            <param name="LogAccountID">资金单元</param>
            <returns>成交序列</returns>
        </member>
        <member name="M:Ats.Core.Strategy.GetPosition(Ats.Core.EnumMarket,System.String)">
            <summary>
            在本地内存查询持仓
            </summary>
            <param name="market">市场</param>
            <param name="LogAccountID">账户ID</param>
            <returns>持仓列表</returns>
        </member>
        <member name="M:Ats.Core.Strategy.GetPosition(Ats.Core.EnumMarket,System.String,System.String,Ats.Core.EnumPositionDirection)">
            <summary>
            从内存中查询持仓
            </summary>
            <param name="market">市场</param>
            <param name="LogAccountID">账户ID</param>
            <param name="InstrumentID">合约代码</param>
            <param name="direction">持仓方向</param>
            <returns>持仓，如果没有则返回NULL</returns>
        </member>
        <member name="M:Ats.Core.Strategy.QueryOrder(System.String)">
            <summary>
            向柜台系统查询委托
            </summary>
            <param name="OrdGUID">委托ID</param>
            <returns>委托</returns>
        </member>
        <member name="M:Ats.Core.Strategy.QueryOrder(Ats.Core.EnumMarket,System.String,System.String)">
            <summary>
            向柜台系统查询委托
            </summary>
            <param name="market"></param>
            <param name="OrdGUID"></param>
            <param name="LogAccountID"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.Strategy.QueryOrders(Ats.Core.EnumMarket,System.String)">
            <summary>
            向柜台查询所有委托
            </summary>
            <param name="market"></param>
            <param name="LogAccountID"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.Strategy.QueryCanCancelOrders(Ats.Core.EnumMarket,System.String)">
            <summary>
            向柜台查询所有可撤单委托列表
            </summary>
            <param name="market"></param>
            <param name="LogAccountID"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.Strategy.QueryTrades(Ats.Core.EnumMarket,System.String)">
            <summary>
            向柜台系统查询成交
            可以查到整个账户的成交
            </summary>
            <param name="market"></param>
            <param name="LogAccountID"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.Strategy.QueryPosition(Ats.Core.EnumMarket,System.String)">
            <summary>
            向柜台系统查询持仓
            </summary>
            <param name="market">市场</param>
            <param name="LogAccountID">账户ID</param>
            <returns>持仓列表</returns>
        </member>
        <member name="M:Ats.Core.Strategy.QueryPhyAccountID(Ats.Core.EnumMarket,System.String)">
            <summary>
            获取物理账户ID（真实账户ID）
            </summary>
            <param name="market">市场</param>
            <param name="LogAccount">逻辑账户ID</param>
            <returns>物理账户ID</returns>
        </member>
        <member name="M:Ats.Core.Strategy.GetAccountCount">
            <summary>
            获取逻辑账户个数
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.Strategy.IdxToLogAccount(System.Int32)">
            <summary>
            获取第idx个逻辑账户ID
            </summary>
            <param name="idx"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.Strategy.LogAccountToIdx(System.String)">
            <summary>
            获取逻辑账户的索引
            </summary>
            <param name="LogAccount">逻辑账户</param>
            <returns>逻辑账户序号</returns>
        </member>
        <member name="M:Ats.Core.Strategy.GetAccount(Ats.Core.EnumMarket,System.Int32)">
            <summary>
            查询账户的资金信息
            </summary>
            <param name="market">账户的市场类型</param>
            <param name="idx">第idx个逻辑账户</param>
            <returns>物理账户</returns>
        </member>
        <member name="M:Ats.Core.Strategy.GetAccount(Ats.Core.EnumMarket,System.String)">
            <summary>
            查询账户
            </summary>
            <param name="market">账户的市场类型</param>
            <param name="LogAccountID">逻辑账户ID</param>
            <returns>物理账户</returns>
        </member>
        <member name="M:Ats.Core.Strategy.MarketPosition(System.String,System.String)">
            <summary>
            指定期货品种指定账户的净持仓
            注意由于成交回报有延迟，因此下单后，MarketPosition并不会立刻变化
            </summary>
            <param name="FutureCode">期货代码</param>
            <param name="LogAccount">期货资金单元</param>
            <returns>净持仓手数</returns>
        </member>
        <member name="M:Ats.Core.Strategy.PurchaseETF(System.String,System.Int32)">
            <summary>
            申购ETF
            </summary>
            <param name="ETFCode">ETF代码</param>
            <param name="Qty">单位:股</param>
            <returns>委托</returns>
        </member>
        <member name="M:Ats.Core.Strategy.RedeemETF(System.String,System.Int32)">
            <summary>
            赎回ETF
            </summary>
            <param name="ETFCode">ETF代码</param>
            <param name="Qty">单位：股</param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.Strategy.BuyStock(System.String,System.Int32,System.Double)">
            <summary>
            普通买入股票
            </summary>
            <param name="StockCode">股票代码</param>
            <param name="Qty">买入股数</param>
            <param name="Price">限价</param>
            <returns>股票委托</returns>
        </member>
        <member name="M:Ats.Core.Strategy.SellStock(System.String,System.Int32,System.Double)">
            <summary>
            普通卖出股票
            </summary>
            <param name="StockCode">股票代码</param>
            <param name="Qty">卖出股数</param>
            <param name="Price">限价</param>
            <returns>股票委托</returns>
        </member>
        <member name="M:Ats.Core.Strategy.LimitOrder(System.String,System.Int32,System.Double,Ats.Core.EnumBuySell,Ats.Core.EnumOpenClose,Ats.Core.EnumHedgeFlag)">
            <summary>
            提交期货限价委托
            </summary>
            <param name="FutureCode">期货代码</param>
            <param name="Volume">合约张数</param>
            <param name="Price">限价</param>
            <param name="Direction">买卖方向</param>
            <param name="OpenorClose">开平标志</param>
            <param name="HedgeFlag">套期保值标志</param>
            <returns>委托实例</returns> 
        </member>
        <member name="M:Ats.Core.Strategy.LimitOrder(System.Int32,System.Double,Ats.Core.EnumBuySell,Ats.Core.EnumOpenClose)">
            <summary>
            对默认期货品种提交限价委托
            </summary>
            <param name="Volume">合约张数</param>
            <param name="Price">限价</param>
            <param name="Direction">买卖方向</param>
            <param name="OpenorClose">开平标志</param>
            <returns>委托实例</returns>
        </member>
        <member name="M:Ats.Core.Strategy.Reverse(Ats.Core.EnumBuySell)">
            <summary>
            反转买卖方向
            </summary>
            <param name="Direction">买卖方向</param>
            <returns>买卖</returns>
        </member>
        <member name="M:Ats.Core.Strategy.CancelAllOrders(Ats.Core.EnumMarket)">
            <summary>
            撤掉默认账户的全部期货委托
            只对订阅的品种有效
            只针对单个账户
            </summary>
        </member>
        <member name="M:Ats.Core.Strategy.GetLowestAskPrice(System.String,System.String)">
            <summary>
            指定期货品种的最低卖出价
            </summary>
            <param name="FutureCode">期货代码</param>
            <param name="LogAccountID">账户</param>
            <returns>保单价格</returns>
        </member>
        <member name="M:Ats.Core.Strategy.GetHighestBidPrice(System.String,System.String)">
            <summary>
            指定期货品种的最高买入价
            </summary>
            <param name="FutureCode"></param>
            <param name="LogAccountID"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.Strategy.TrimFuturePrice(System.Double)">
            <summary>
            对默认期货的报单价格进行整理
            如果价格不是最小单位的整数倍，则会调整为最小单位的整数倍
            </summary>
            <param name="orderPrice"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.Strategy.TrimFuturePrice(Ats.Core.Future,System.Double)">
            <summary>
            对期货价格进行整理
            如果价格不是最小单位的整数倍，则会调整为最小单位的整数倍
            </summary>
            <param name="future">期货合约</param>
            <param name="orderPrice">委托价格</param>
            <returns>整理后价格</returns>
        </member>
        <member name="M:Ats.Core.Strategy.ModifyMoney(Ats.Core.EnumMarket,System.Double)">
            <summary>
            调整账户资金
            复盘是修改账户资金
            只有复盘有效，实盘无效
            </summary>
            <param name="market">市场</param>
            <param name="money">资金</param>
        </member>
        <member name="M:Ats.Core.Strategy.AddIndicator(Ats.Core.Indicator)">
            <summary>
            添加指标到后台引擎
            </summary>
            <param name="indicator">指标</param>
        </member>
        <member name="M:Ats.Core.Strategy.Print(System.String)">
            <summary>
            屏幕回显
            </summary>
            <param name="msg">消息</param>
        </member>
        <member name="M:Ats.Core.Strategy.PlaySound(Ats.Core.EnumSound)">
            <summary>
            发出声音
            </summary>
            <param name="sound">声音类型</param>
        </member>
        <member name="M:Ats.Core.Strategy.ShowMessage(System.String)">
            <summary>
            人工确认中止或者继续
            </summary>
            <param name="message">消息</param>
        </member>
        <member name="M:Ats.Core.Strategy.DictContains(System.String)">
            <summary>
            字典中是否有键
            </summary>
            <param name="key">键</param>
            <returns>是否存在该键</returns>
        </member>
        <member name="M:Ats.Core.Strategy.GetDict(System.String)">
            <summary>
            获取字典
            </summary>
            <param name="key">键</param>
            <returns>值</returns>
        </member>
        <member name="M:Ats.Core.Strategy.SetDict(System.String,System.String)">
            <summary>
            设置字典值
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:Ats.Core.Strategy.IsTradingDay(System.DateTime)">
            <summary>
            验证日期是否是中国大陆市场交易日
            </summary>
            <param name="t">日期</param>
            <returns>是否是交易日</returns>
        </member>
        <member name="M:Ats.Core.Strategy.GetTradingDays">
            <summary>
            获取所有中国大陆市场交易日
            </summary>
            <returns>交易日列表</returns>
        </member>
        <member name="M:Ats.Core.Strategy.GetPreTradingDay(System.DateTime)">
            <summary>
            获取前一个中国A股交易日
            </summary>
            <param name="theDay">某个特定日期</param>
            <returns>上一个交易日</returns>
        </member>
        <member name="M:Ats.Core.Strategy.GetNextTradingDay(System.DateTime)">
            <summary>
            获取下一个中国A股交易日
            </summary>
            <param name="theDay">某个特定日期</param>
            <returns>下一个交易日</returns>
        </member>
        <member name="M:Ats.Core.Strategy.Stop(System.String)">
            <summary>
            停止策略
            </summary>
            <param name="message">消息</param>
        </member>
        <member name="M:Ats.Core.Strategy.Wait(System.Int32)">
            <summary>
            策略休眠T毫秒
            复盘无效
            </summary>
            <param name="T">休眠T毫秒</param>
        </member>
        <member name="M:Ats.Core.Strategy.Abs(System.Int32)">
            <summary>
            求绝对值
            </summary>
            <param name="x">整数</param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.Strategy.Abs(System.Double)">
            <summary>
            求绝对值
            </summary>
            <param name="x">双精度浮点数</param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.Strategy.GetAllETFBaskets(Ats.Core.EnumExchange,System.DateTime)">
            <summary>
            获取所有ETF篮子信息
            </summary>
            <param name="exchange">交易所</param>
            <param name="tradingDay">交易日</param>
            <returns>ETF篮子信息</returns>
        </member>
        <member name="M:Ats.Core.Strategy.GetETFBasket(System.String,System.DateTime)">
            <summary>
            获取特定ETF的篮子信息
            </summary>
            <param name="etfCode">ETF代码</param>
            <param name="tradingDay">交易日</param>
            <returns>ETF篮子信息</returns>
        </member>
        <member name="P:Ats.Core.Strategy.VersionNo">
            <summary>
            底层接口版本号
            </summary>
        </member>
        <member name="P:Ats.Core.Strategy.Fun">
            <summary>
            功能提供器
            </summary>
        </member>
        <member name="P:Ats.Core.Strategy.ProjectName">
            <summary>
            工程名称
            </summary>
        </member>
        <member name="P:Ats.Core.Strategy.WorkMode">
            <summary>
            策略的运行模式
            Live实盘
            Simulate复盘
            </summary>
        </member>
        <member name="P:Ats.Core.Strategy.StartSimulateDay">
            <summary>
            开始复盘日期
            </summary>
        </member>
        <member name="P:Ats.Core.Strategy.EndSimulateDay">
            <summary>
            结束复盘日期
            </summary>
        </member>
        <member name="P:Ats.Core.Strategy.AllStockOptions">
            <summary>
            所有期权合约
            </summary>
        </member>
        <member name="P:Ats.Core.Strategy.AllFutureOptions">
            <summary>
            所有的期货期权
            </summary>
        </member>
        <member name="P:Ats.Core.Strategy.AllAbordInstruments">
            <summary>
            外盘品种
            </summary>
        </member>
        <member name="P:Ats.Core.Strategy.AllStocks">
            <summary>
            所有股票品种
            </summary>
        </member>
        <member name="P:Ats.Core.Strategy.DefaultStock">
            <summary>
            默认股票
            订阅的第一个股票
            </summary>
        </member>
        <member name="P:Ats.Core.Strategy.DefaultStockCode">
            <summary>
            默认股票代码
            订阅的第一个股票的代码
            </summary>
        </member>
        <member name="P:Ats.Core.Strategy.AllFutures">
            <summary>
            所有期货品种
            </summary>
        </member>
        <member name="P:Ats.Core.Strategy.DefaultFuture">
            <summary>
            默认期货
            订阅的第一个期货
            </summary>
        </member>
        <member name="P:Ats.Core.Strategy.DefaultFutureCode">
            <summary>
            默认期货代码
            订阅的第一个期货的代码
            </summary>
        </member>
        <member name="P:Ats.Core.Strategy.TriggerInstrument">
            <summary>
            驱动品种(触发策略运行的品种)
            可以是股票也可以是期货
            </summary>
        </member>
        <member name="P:Ats.Core.Strategy.Now">
            <summary>
            本地操作系统时间
            注意:可能与交易所时间不一样!
            </summary>
        </member>
        <member name="P:Ats.Core.Strategy.Year">
            <summary>
            年
            </summary>
        </member>
        <member name="P:Ats.Core.Strategy.Month">
            <summary>
            月
            </summary>
        </member>
        <member name="P:Ats.Core.Strategy.Day">
            <summary>
            日
            </summary>
        </member>
        <member name="P:Ats.Core.Strategy.TradingDate">
            <summary>
            交易日
            </summary>
        </member>
        <member name="P:Ats.Core.Strategy.DefaultAccount">
            <summary>
            默认逻辑账户
            </summary>
        </member>
        <member name="P:Ats.Core.Strategy.MyUI">
            <summary>
            策略关联的控件
            </summary>
        </member>
        <member name="T:Ats.Core.StockDivideItem">
            <summary>
            股票除权信息
            </summary>
        </member>
        <member name="M:Ats.Core.StockDivideItem.GetPostDivPrice(System.Double)">
            <summary>
            获取除权后的价格，四舍五入
            </summary>
            <param name="preDivPrice"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.StockDivideItem.GetPostDivPrice1(System.Double)">
            <summary>
            计算除权后的价格，没有四舍五入
            </summary>
            <param name="preDivPrice">除权前的价格</param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.StockDivideItem.GetPreDivPrice1(System.Double)">
            <summary>
            计算除权前的价格，没有四舍五入
            </summary>
            <param name="postDivPrice">除权后的价格</param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.StockDivideItem.GetAddCash(System.Int32)">
            <summary>
            计算因为分红增加的现金
            </summary>
            <param name="Amount">持有股数</param>
            <returns>分红增加的现金</returns>
        </member>
        <member name="M:Ats.Core.StockDivideItem.GetDispatchCash(System.Int32)">
            <summary>
            计算如果参与增加DispatchAmount股，账户需要扣减的现金
            </summary>
            <param name="DispatchAmount"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.StockDivideItem.GetDispatchAmount(System.Int32,System.Double)">
            <summary>
            计算账户余额可以参与增发的股数
            </summary>
            <param name="CurrentAmount">账户当前持有股数</param>
            <param name="Cash">账户余额</param>
            <returns>可以参与增发的最大的股数</returns>
        </member>
        <member name="M:Ats.Core.StockDivideItem.GetPostAmount(System.Int32,System.Int32)">
            <summary>
            计算除权后最终头寸的持有股数
            </summary>
            <param name="CurrentAmount">当前的持有股数</param>
            <param name="DispatchAmount">参与增发的股数</param>
            <returns>最终头寸的股数</returns>
        </member>
        <member name="P:Ats.Core.StockDivideItem.StockCode">
            <summary>
            股票代码
            </summary>
        </member>
        <member name="P:Ats.Core.StockDivideItem.RegDate">
            <summary>
            登记日
            </summary>
        </member>
        <member name="P:Ats.Core.StockDivideItem.DivDate">
            <summary>
            除权日
            </summary>
        </member>
        <member name="P:Ats.Core.StockDivideItem.Cash">
            <summary>
            每股现金分红
            </summary>
        </member>
        <member name="P:Ats.Core.StockDivideItem.Split">
            <summary>
            每股拆股(红股+转增股)
            </summary>
        </member>
        <member name="P:Ats.Core.StockDivideItem.Dispatch">
            <summary>
            每股配股
            </summary>
        </member>
        <member name="P:Ats.Core.StockDivideItem.DispatchPrice">
            <summary>
            配股价
            </summary>
        </member>
        <member name="P:Ats.Core.StockDivideItem.Description">
            <summary>
            描述(例如2008-06-13:每十股 转增3.00股 红利1.00元)
            </summary>
        </member>
        <member name="T:Ats.Core.StockHelper">
            <summary>
            股票常用的帮助方法
            都是静态方法
            </summary>
        </member>
        <member name="M:Ats.Core.StockHelper.TrimStockBuyVolume(System.Double)">
            <summary>
            将浮点数转化成可买的股数
            买入时，必须是100的整数倍
            例如967.5---转化后成为900
            58---转化成0
            卖出时，可以是零股
            例如要卖出967.5,转化后是967
            </summary>
            <param name="n"></param> 
            <returns></returns>
        </member>
        <member name="M:Ats.Core.StockHelper.TrimStockOrderPrice(Ats.Core.Stock,System.Double)">
            <summary>
            修整股票委托价格
            </summary>
            <param name="orderPrice"></param>
            <returns></returns>
        </member>
        <member name="T:Ats.Core.B2DWrapper">
            <summary>
            Bar-->DataSeries
            </summary>
        </member>
        <member name="T:Ats.Core.ISeries">
            <summary>
            可回溯单个的系列数据
            </summary>
        </member>
        <member name="M:Ats.Core.ISeries.Ago(System.Int32)">
            <summary>
            回溯
            </summary>
            <param name="n">从0开始，正数</param>
            <returns></returns>
        </member>
        <member name="P:Ats.Core.ISeries.Count">
            <summary>
            序列长度
            </summary>
        </member>
        <member name="P:Ats.Core.ISeries.Item(System.Int32)">
            <summary>
            获取数据
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:Ats.Core.Bar">
            <summary>
            单根K线
            </summary>
        </member>
        <member name="M:Ats.Core.Bar.AddTick(Ats.Core.Tick)">
            <summary>
            添加Tick
            </summary>
            <param name="e">tick</param>
        </member>
        <member name="M:Ats.Core.Bar.OpenBar(Ats.Core.Bar)">
            <summary>
            Bar开始
            </summary>
            <param name="newbar"></param>
        </member>
        <member name="M:Ats.Core.Bar.CloseBar(System.DateTime)">
            <summary>
            Bar关闭
            </summary>
            <param name="endtime">结束时间</param>
        </member>
        <member name="M:Ats.Core.Bar.Clone">
            <summary>
            克隆一份Bar
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ats.Core.Bar.TradingDate">
            <summary>
            交易日
            </summary>
        </member>
        <member name="P:Ats.Core.Bar.BeginTime">
            <summary>
            开始时刻，包含日期
            </summary>
        </member>
        <member name="P:Ats.Core.Bar.EndTime">
            <summary>
            结束时刻，包含日期
            </summary>
        </member>
        <member name="P:Ats.Core.Bar.Duration">
            <summary>
            持续时间
            </summary>
        </member>
        <member name="P:Ats.Core.Bar.High">
            <summary>
            最高价
            </summary>
        </member>
        <member name="P:Ats.Core.Bar.Open">
            <summary>
            第一个价格
            </summary>
        </member>
        <member name="P:Ats.Core.Bar.Low">
            <summary>
            最低价
            </summary>
        </member>
        <member name="P:Ats.Core.Bar.Close">
            <summary>
            最后一个价格
            </summary>
        </member>
        <member name="P:Ats.Core.Bar.PreClose">
            <summary>
            前一根K线的最后一个价格
            </summary>
        </member>
        <member name="P:Ats.Core.Bar.IsComplete">
            <summary>
            该K线是否已经完成
            </summary>
        </member>
        <member name="P:Ats.Core.Bar.Volume">
            <summary>
            当前这根K线的成交量
            </summary>
        </member>
        <member name="P:Ats.Core.Bar.Turnover">
            <summary>
            当前这根K线的成交额
            </summary>
        </member>
        <member name="P:Ats.Core.Bar.OpenInterest">
            <summary>
            当前总的持仓量
            </summary>
        </member>
        <member name="P:Ats.Core.Bar.Item(Ats.Core.BarData)">
            <summary>
            根据barData获取指定数据
            </summary>
            <param name="barData">Bar数据类型</param>
            <returns>barData对应的数据</returns>
        </member>
        <member name="P:Ats.Core.Bar.BarChange">
            <summary>
            K线内的涨跌幅(%)
            以当前K线的开盘价为基准计算
            涨跌幅大于0说明是阳线
            涨跌幅小于0说明是阴线
            </summary>
        </member>
        <member name="P:Ats.Core.Bar.Change">
            <summary>
            K线的涨跌幅(%)
            以前一根K线的收盘价为基准计算
            </summary>
        </member>
        <member name="T:Ats.Core.BarData">
            <summary>
            K线的数据元素类型
            </summary>
        </member>
        <member name="F:Ats.Core.BarData.Close">
            <summary>
            最后一个价格
            </summary>
        </member>
        <member name="F:Ats.Core.BarData.Open">
            <summary>
            第一个价格
            </summary>
        </member>
        <member name="F:Ats.Core.BarData.High">
            <summary>
            最高价
            </summary>
        </member>
        <member name="F:Ats.Core.BarData.Low">
            <summary>
            最低价
            </summary>
        </member>
        <member name="F:Ats.Core.BarData.Volume">
            <summary>
            成交量
            </summary>
        </member>
        <member name="F:Ats.Core.BarData.Turnover">
            <summary>
            成交额
            </summary>
        </member>
        <member name="T:Ats.Core.BarSeries">
            <summary>
            K线
            </summary>
        </member>
        <member name="M:Ats.Core.BarSeries.Contains(System.DateTime)">
            <summary>
            是否包含时刻
            </summary>
            <param name="dateTime">时刻</param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.BarSeries.Clone">
            <summary>
            克隆整个Bar序列
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.BarSeries.GetDateTime(System.Int32)">
            <summary>
            给定index-得出当前这个位置的K线的BeginTime
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.BarSeries.GetIndex(System.DateTime)">
            <summary>
            根据时间直接定位到对应K线的index
            如果找不到，返回-1
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.BarSeries.GetIndex(System.DateTime,Ats.Core.EnumIndexOption)">
            <summary>
            根据时间戳找到索引
            </summary>
            <param name="dateTime">时间戳</param>
            <param name="option">找不到的处理方法</param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.BarSeries.HighestHigh">
            <summary>
            整个K线中，所有High值中的最大值
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.BarSeries.HighestHigh(System.Int32)">
            <summary>
            回溯n个Bar内的最高
            (包括当前Bar agoN=0那个)
            </summary>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.BarSeries.HighestHigh(System.DateTime,System.DateTime)">
            <summary>
            获取特定两个时间区间内的最高值 
            </summary>
            <param name="dateTime1">开始时间</param>
            <param name="dateTime2">结束时间</param>
            <returns>最高值</returns>
        </member>
        <member name="M:Ats.Core.BarSeries.HighestHigh(System.Int32,System.Int32)">
            <summary>
            获取最后N个Bar中High值中的最高值 
            </summary>
            <param name="index1">开始索引位置</param>
            <param name="index2">结束索引位置</param>
            <returns>最大值</returns>
        </member>
        <member name="M:Ats.Core.BarSeries.HighestHighBar">
            <summary>
            最高值发生的那个Bar
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.BarSeries.HighestHighBar(System.Int32)">
            <summary>
            最高值发生的那个 Bar
            </summary>
            <param name="agoN"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.BarSeries.HighestHighBar(System.DateTime,System.DateTime)">
            <summary>
            返回指定时间段内最高值发生的Bar
            </summary>
            <param name="DateTime1">开始时间</param>
            <param name="DateTime2">结束时间</param>
            <returns>Bar</returns>
        </member>
        <member name="M:Ats.Core.BarSeries.HighestHighBar(System.Int32,System.Int32)">
            <summary>
            获取Index1和Index2之间的最高High
            </summary>
            <param name="beginIndex">开始索引位置</param>
            <param name="endIndex">结束索引位置</param>
            <returns>最高的那个Bar</returns>
        </member>
        <member name="M:Ats.Core.BarSeries.LowestLow(System.Int32,System.Int32)">
            <summary>
            最低的最低值
            </summary>
            <param name="beginIndex">开始Index</param>
            <param name="endIndex">结束Index</param>
            <returns>数值</returns>
        </member>
        <member name="M:Ats.Core.BarSeries.AgoLowestLow(System.Int32,System.Int32)">
            <summary>
            回溯低值的最低值
            </summary>
            <param name="N">回溯起始N</param>
            <param name="M">回溯结束M</param>
            <returns>最低值</returns>
        </member>
        <member name="M:Ats.Core.BarSeries.LowestLowBar">
            <summary>
            最低的低值出现的Bar
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.BarSeries.LowestLowBar(System.Int32)">
            <summary>
            最低的低值出现的Bar
            </summary>
            <param name="agoN">回溯N</param>
            <returns>Bar</returns>
        </member>
        <member name="M:Ats.Core.BarSeries.LowestLowBar(System.DateTime,System.DateTime)">
            <summary>
            最低的低值出现的Bar
            </summary>
            <param name="beginTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>Bar</returns>
        </member>
        <member name="M:Ats.Core.BarSeries.LowestLowBar(System.Int32,System.Int32)">
            <summary>
            最低的低值出现的Bar
            </summary>
            <param name="beginIndex">开始索引</param>
            <param name="endIndex">结束索引</param>
            <returns>Bar</returns>
        </member>
        <member name="M:Ats.Core.BarSeries.AgoLowestLowBar(System.Int32,System.Int32)">
            <summary>
            回溯获取最低的低值出现的Bar
            </summary>
            <param name="N">回溯开始N</param>
            <param name="M">回溯结束M</param>
            <returns>Bar</returns>
        </member>
        <member name="M:Ats.Core.BarSeries.BarChanged">
            <summary>
            Bar改变
            </summary>
        </member>
        <member name="M:Ats.Core.BarSeries.Ago(System.Int32,Ats.Core.BarData)">
            <summary>
            回溯K线数值
            </summary>
            <param name="agoN">回溯N</param>
            <param name="barData">K线的数据元素类型</param>
            <returns>值</returns>
        </member>
        <member name="M:Ats.Core.BarSeries.AgoSub(System.Int32,System.Int32)">
            <summary>
            回溯区间(倒数第N个到倒数第M个)
            </summary>
            <param name="N">倒数第N个</param>
            <param name="M">倒是第M个</param>
            <returns>回溯区间内的BarSeries</returns>
        </member>
        <member name="P:Ats.Core.BarSeries.InstrumentID">
            <summary>
            合约代码
            </summary>
        </member>
        <member name="P:Ats.Core.BarSeries.Volume">
            <summary>
            K线序列的总成交量
            </summary>
        </member>
        <member name="P:Ats.Core.BarSeries.TurnOver">
            <summary>
            K线序列的总成交额
            </summary>
        </member>
        <member name="P:Ats.Core.BarSeries.High">
            <summary>
            最高值序列
            </summary>
        </member>
        <member name="P:Ats.Core.BarSeries.Open">
            <summary>
            开盘价序列
            </summary>
        </member>
        <member name="P:Ats.Core.BarSeries.Low">
            <summary>
            最低值序列
            </summary>
        </member>
        <member name="P:Ats.Core.BarSeries.Close">
            <summary>
            收盘价序列
            </summary>
        </member>
        <member name="P:Ats.Core.BarSeries.VolumeSeries">
            <summary>
            成交量序列
            </summary>
        </member>
        <member name="P:Ats.Core.BarSeries.TurnOverSeries">
            <summary>
            成交额序列
            </summary>
        </member>
        <member name="E:Ats.Core.BarSeries.OnChanged">
            <summary>
            Bar改变事件
            </summary>
        </member>
        <member name="T:Ats.Core.DataSeries">
            <summary>
            数字序列
            </summary>
        </member>
        <member name="M:Ats.Core.DataSeries.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Ats.Core.DataSeries.#ctor(System.Collections.Generic.List{System.Double})">
            <summary>
            构造函数
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Ats.Core.DataSeries.AgoSub(System.Int32)">
            <summary>
            从序列末位向前获取子集
            n取值 : 0 -- 最后一个对象；1 -- 倒数第二个对象
            </summary>
            <param name="n">回溯N</param>
            <returns>数据集</returns>
        </member>
        <member name="M:Ats.Core.DataSeries.AgoSub(System.Int32,System.Int32)">
            <summary>
            回溯区间(倒数第N个到倒数第M个)
            </summary>
            <param name="N"></param>
            <param name="M"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.DataSeries.NthConLessThan(System.Double,System.Int32)">
            <summary>
            第N个满足条件的数值距最后一个数的偏移值
            </summary>
            <param name="x"></param>
            <param name="N">求第N个满足条件中的N值，N = 1表示最近的一个，N = 2 为倒数第二个</param>
            <returns>0就是最后一个数,即Ago(0)；1倒数第2个，即Ago(1)；-1说明没有满足条件的</returns>
        </member>
        <member name="T:Ats.Core.EnumCross">
            <summary>
            2条曲线互相穿过关系
            </summary>
        </member>
        <member name="F:Ats.Core.EnumCross.Above">
            <summary>
            上穿
            </summary>
        </member>
        <member name="F:Ats.Core.EnumCross.Below">
            <summary>
            下穿
            </summary>
        </member>
        <member name="F:Ats.Core.EnumCross.None">
            <summary>
            无
            </summary>
        </member>
        <member name="T:Ats.Core.EnumExchange">
            <summary>
            中国大陆的交易所
            </summary>
        </member>
        <member name="F:Ats.Core.EnumExchange.上证所">
            <summary>
            上海证券交易所
            </summary>
        </member>
        <member name="F:Ats.Core.EnumExchange.深交所">
            <summary>
            深圳证券交易所
            </summary>
        </member>
        <member name="F:Ats.Core.EnumExchange.中金所">
            <summary>
            中金所
            </summary>
        </member>
        <member name="F:Ats.Core.EnumExchange.上期所">
            <summary>
            上海期货交易所
            </summary>
        </member>
        <member name="F:Ats.Core.EnumExchange.大商所">
            <summary>
            大连商品交易所
            </summary>
        </member>
        <member name="F:Ats.Core.EnumExchange.郑商所">
            <summary>
            郑州商品交易所
            </summary>
        </member>
        <member name="F:Ats.Core.EnumExchange.新交所">
            <summary>
            新加坡交易所
            </summary>
        </member>
        <member name="T:Ats.Core.EnumBuySell">
            <summary>
            买入卖出方向
            </summary>
        </member>
        <member name="F:Ats.Core.EnumBuySell.买入">
            <summary>
            股票、期货买入
            </summary>
        </member>
        <member name="F:Ats.Core.EnumBuySell.卖出">
            <summary>
            股票、期货卖出
            </summary>
        </member>
        <member name="F:Ats.Core.EnumBuySell.ETF申购">
            <summary>
            ETF申购
            </summary>
        </member>
        <member name="F:Ats.Core.EnumBuySell.ETF赎回">
            <summary>
            ETF赎回
            </summary>
        </member>
        <member name="F:Ats.Core.EnumBuySell.融资买入">
            <summary>
            向券商借钱买入股票(信用账户)
            融资买入的品种须在公司规定的标的证券范围之内
            </summary>
        </member>
        <member name="F:Ats.Core.EnumBuySell.卖券还款">
            <summary>
            卖出信用账户内的证券，偿还其融资负债
            </summary>
        </member>
        <member name="F:Ats.Core.EnumBuySell.现金还款">
            <summary>
            偿还融资负债
            </summary>
        </member>
        <member name="F:Ats.Core.EnumBuySell.融券卖出">
            <summary>
            向券商借股票卖出做空
            融券卖出的品种须在公司规定的标的证券及所提供的融券券源范围之内
            </summary>
        </member>
        <member name="F:Ats.Core.EnumBuySell.买券还券">
            <summary>
            从二级市场买入股票还当初融券的负债
            </summary>
        </member>
        <member name="F:Ats.Core.EnumBuySell.现券还券">
            <summary>
            利用已经持有的股票还当初融券的负债
            </summary>
        </member>
        <member name="F:Ats.Core.EnumBuySell.备兑">
            <summary>
            期权专用：备兑开仓和备兑平仓
            在拥有标的证券（含当日买入）的基础上
            卖出相应的认购期权（百分之百现券担保，不需现金保证金）
            即通过备兑开仓增加备兑持仓头寸
            </summary>
        </member>
        <member name="F:Ats.Core.EnumBuySell.锁定">
            <summary>
            锁定现货，用做备兑开仓
            开仓+锁定 现货股票 = 冻结股票
            平仓+锁定 现货股票 = 解冻股票
            锁定解冻后，LTS会触发成交回报
            </summary>
        </member>
        <member name="T:Ats.Core.EnumOrderPriceType">
            <summary>
            价格类型
            </summary>
        </member>
        <member name="F:Ats.Core.EnumOrderPriceType.限价">
            <summary>
            限价单，都可用
            </summary>
        </member>
        <member name="F:Ats.Core.EnumOrderPriceType.市价">
            <summary>
            市价
            </summary>
        </member>
        <member name="F:Ats.Core.EnumOrderPriceType.市价剩余转限价">
            <summary>
            市价报入，剩余转限价
            </summary>
        </member>
        <member name="F:Ats.Core.EnumOrderPriceType.五档即成剩撤">
            <summary>
            五档即成剩撤
            </summary>
        </member>
        <member name="T:Ats.Core.EnumOrderTimeForce">
            <summary>
            订单的有效时间类型
            </summary>
        </member>
        <member name="F:Ats.Core.EnumOrderTimeForce.当日有效">
            <summary>
            价格当日有效
            </summary>
        </member>
        <member name="F:Ats.Core.EnumOrderTimeForce.FAK">
            <summary>
            即时成交剩余自动撤销，报单不会显示在盘口上
            上交所IOC=上期所FAK，这里采用FAK
            </summary>
        </member>
        <member name="F:Ats.Core.EnumOrderTimeForce.FOK">
            <summary>
            即时全部成交，否则撤销
            </summary>
        </member>
        <member name="T:Ats.Core.EnumPositionDirection">
            <summary>
            持仓方向
            </summary>
        </member>
        <member name="F:Ats.Core.EnumPositionDirection.多头">
            <summary>
            买入带来的持仓
            权力仓
            </summary>
        </member>
        <member name="F:Ats.Core.EnumPositionDirection.空头">
            <summary>
            卖出带来的持仓
            义务仓
            </summary>
        </member>
        <member name="F:Ats.Core.EnumPositionDirection.净持仓">
            <summary>
            一般用不到
            </summary>
        </member>
        <member name="F:Ats.Core.EnumPositionDirection.备兑">
            <summary>
            期权特有
            持有现货，卖出开仓
            </summary>
        </member>
        <member name="T:Ats.Core.EnumMarket">
            <summary>
            大品种分类
            股票
            期货
            个股期权
            期货期权
            外盘
            </summary>
        </member>
        <member name="F:Ats.Core.EnumMarket.股票">
            <summary>
            股票
            </summary>
        </member>
        <member name="F:Ats.Core.EnumMarket.期货">
            <summary>
            期货
            </summary>
        </member>
        <member name="F:Ats.Core.EnumMarket.股票期权">
            <summary>
            个股期权
            </summary>
        </member>
        <member name="F:Ats.Core.EnumMarket.期货期权">
            <summary>
            期货期权
            </summary>
        </member>
        <member name="F:Ats.Core.EnumMarket.指数">
            <summary>
            指数
            </summary>
        </member>
        <member name="F:Ats.Core.EnumMarket.外盘">
            <summary>
            外盘
            </summary>
        </member>
        <member name="T:Ats.Core.EnumOpenClose">
            <summary>
            开平仓
            </summary>
        </member>
        <member name="F:Ats.Core.EnumOpenClose.开仓">
            <summary>
            开仓
            </summary>
        </member>
        <member name="F:Ats.Core.EnumOpenClose.平仓">
            <summary>
            平仓
            </summary>
        </member>
        <member name="F:Ats.Core.EnumOpenClose.平今仓">
            <summary>
            平今
            </summary>
        </member>
        <member name="F:Ats.Core.EnumOpenClose.强平">
            <summary>
            强平
            </summary>
        </member>
        <member name="F:Ats.Core.EnumOpenClose.强减">
            <summary>
            强减
            </summary>
        </member>
        <member name="T:Ats.Core.EnumBarType">
            <summary>
            Bar类型
            K线类型（日K线、分钟K线）
            </summary>
        </member>
        <member name="F:Ats.Core.EnumBarType.秒">
            <summary>
            秒线
            </summary>
        </member>
        <member name="F:Ats.Core.EnumBarType.分钟">
            <summary>
            分钟线
            </summary>
        </member>
        <member name="F:Ats.Core.EnumBarType.小时">
            <summary>
            小时
            </summary>
        </member>
        <member name="F:Ats.Core.EnumBarType.日线">
            <summary>
            日线
            </summary>
        </member>
        <member name="F:Ats.Core.EnumBarType.周线">
            <summary>
            周线
            </summary>
        </member>
        <member name="F:Ats.Core.EnumBarType.月线">
            <summary>
            月线
            </summary>
        </member>
        <member name="F:Ats.Core.EnumBarType.年线">
            <summary>
            年线
            </summary>
        </member>
        <member name="F:Ats.Core.EnumBarType.Tick">
            <summary>
            Tick, 只支持 1 个 tick
            </summary>
        </member>
        <member name="T:Ats.Core.EnumTH_AfterCancel">
            <summary>
            交易助手-撤单成功后续处理
            </summary>
        </member>
        <member name="M:Ats.Core.EnumTH_AfterCancel_Helper.ConvertTo(System.String)">
            <summary>
            将字符串解析成枚举
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:Ats.Core.EnumTH_CancelOrder">
            <summary>
            交易助手-撤单设置
            </summary>
        </member>
        <member name="M:Ats.Core.EnumTH_CancelOrder_Helper.ConvertTo(System.String)">
            <summary>
            将字符串解析成枚举
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:Ats.Core.EnumTH_ReSend">
            <summary>
            重发委托方式
            </summary>
        </member>
        <member name="M:Ats.Core.EnumTH_ReSend_Helper.ConvertTo(System.String)">
            <summary>
            将字符串解析成枚举
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:Ats.Core.EnumTriggerMode">
            <summary>
            驱动模式
            </summary>
        </member>
        <member name="T:Ats.Core.EnumSearchOption">
            <summary>
            查询方向
            </summary>
        </member>
        <member name="F:Ats.Core.EnumSearchOption.Prev">
            <summary>
            向前查
            </summary>
        </member>
        <member name="F:Ats.Core.EnumSearchOption.Exact">
            <summary>
            精确查
            </summary>
        </member>
        <member name="F:Ats.Core.EnumSearchOption.Next">
            <summary>
            向后查
            </summary>
        </member>
        <member name="T:Ats.Core.Future">
            <summary>
            期货
            </summary>
        </member>
        <member name="M:Ats.Core.Future.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Ats.Core.Future.OpenDate">
            <summary>
            上市日
            </summary>
        </member>
        <member name="P:Ats.Core.Future.ProductID">
            <summary>
            产品代码
            </summary>
        </member>
        <member name="P:Ats.Core.Future.FutureType">
            <summary>
            合约类型
            </summary>
        </member>
        <member name="P:Ats.Core.Future.RealFuture">
            <summary>
            当该Future是指数合约时，RealFuture指向了其对应的真实合约
            2013-7-30时，例如IF9990的RealFuture是IF1308
            </summary>
        </member>
        <member name="P:Ats.Core.Future.ExpireDate">
            <summary>
            到期日
            </summary>
        </member>
        <member name="P:Ats.Core.Future.LongMarginRatio">
            <summary>
            多头保证金率
            </summary>
        </member>
        <member name="P:Ats.Core.Future.ShortMarginRatio">
            <summary>
            空头保证金率
            </summary>
        </member>
        <member name="P:Ats.Core.Future.IsArbitrage">
            <summary>
            是否为套利品种
            郑商所一些SP开头的品种时套利的
            </summary>
        </member>
        <member name="T:Ats.Core.FutureCommissionRate">
            <summary>
            期货手续费
            </summary>
        </member>
        <member name="F:Ats.Core.FutureCommissionRate.BrokerID">
            <summary>
            经纪公司代码
            </summary>
        </member>
        <member name="F:Ats.Core.FutureCommissionRate.InvestorID">
            <summary>
            投资者代码
            </summary>
        </member>
        <member name="F:Ats.Core.FutureCommissionRate.InstrumentID">
            <summary>
            合约代码
            </summary>
        </member>
        <member name="F:Ats.Core.FutureCommissionRate.OpenRatioByMoney">
            <summary>
            开仓手续费率
            </summary>
        </member>
        <member name="F:Ats.Core.FutureCommissionRate.OpenRatioByVolume">
            <summary>
            每手开仓手续费
            </summary>
        </member>
        <member name="F:Ats.Core.FutureCommissionRate.CloseRatioByMoney">
            <summary>
            平仓手续费率
            </summary>
        </member>
        <member name="F:Ats.Core.FutureCommissionRate.CloseRatioByVolume">
            <summary>
            每手平仓手续费
            </summary>
        </member>
        <member name="F:Ats.Core.FutureCommissionRate.CloseTodayRatioByMoney">
            <summary>
            平今手续费率
            </summary>
        </member>
        <member name="F:Ats.Core.FutureCommissionRate.CloseTodayRatioByVolume">
            <summary>
            每手平今手续费
            </summary>
        </member>
        <member name="T:Ats.Core.EnumFutureOrderStatus">
            <summary>
            期货委托状态
            </summary>
        </member>
        <member name="F:Ats.Core.EnumFutureOrderStatus.废单">
            <summary>
            废单
            </summary>
        </member>
        <member name="F:Ats.Core.EnumFutureOrderStatus.待报">
            <summary>
            待报
            </summary>
        </member>
        <member name="F:Ats.Core.EnumFutureOrderStatus.已报">
            <summary>
            已报
            </summary>
        </member>
        <member name="T:Ats.Core.EnumProductClass">
            <summary>
            期货产品类型
            </summary>
        </member>
        <member name="F:Ats.Core.EnumProductClass.Futures">
            <summary>
            期货
            </summary>
        </member>
        <member name="F:Ats.Core.EnumProductClass.Options">
            <summary>
            期权
            </summary>
        </member>
        <member name="F:Ats.Core.EnumProductClass.Combination">
            <summary>
            组合
            </summary>
        </member>
        <member name="F:Ats.Core.EnumProductClass.Spot">
            <summary>
            即期
            </summary>
        </member>
        <member name="F:Ats.Core.EnumProductClass.EFP">
            <summary>
            期转现
            </summary>
        </member>
        <member name="T:Ats.Core.EnumPriceSource">
            <summary>
            成交价来源
            </summary>
        </member>
        <member name="F:Ats.Core.EnumPriceSource.LastPrice">
            <summary>
            前成交价
            </summary>
        </member>
        <member name="F:Ats.Core.EnumPriceSource.Buy">
            <summary>
            买委托价
            </summary>
        </member>
        <member name="F:Ats.Core.EnumPriceSource.Sell">
            <summary>
            卖委托价
            </summary>
        </member>
        <member name="T:Ats.Core.EnumContingentCondition">
            <summary>
            EnumContingentCondition一个触发条件类型
            </summary>
        </member>
        <member name="F:Ats.Core.EnumContingentCondition.Immediately">
            <summary>
            立即
            </summary>
        </member>
        <member name="F:Ats.Core.EnumContingentCondition.Touch">
            <summary>
            止损
            </summary>
        </member>
        <member name="F:Ats.Core.EnumContingentCondition.TouchProfit">
            <summary>
            止赢
            </summary>
        </member>
        <member name="F:Ats.Core.EnumContingentCondition.ParkedOrder">
            <summary>
            预埋单
            </summary>
        </member>
        <member name="F:Ats.Core.EnumContingentCondition.LastPriceGreaterThanStopPrice">
            <summary>
            最新价大于条件价
            </summary>
        </member>
        <member name="F:Ats.Core.EnumContingentCondition.LastPriceGreaterEqualStopPrice">
            <summary>
            最新价大于等于条件价
            </summary>
        </member>
        <member name="F:Ats.Core.EnumContingentCondition.LastPriceLesserThanStopPrice">
            <summary>
            最新价小于条件价
            </summary>
        </member>
        <member name="F:Ats.Core.EnumContingentCondition.LastPriceLesserEqualStopPrice">
            <summary>
            最新价小于等于条件价
            </summary>
        </member>
        <member name="F:Ats.Core.EnumContingentCondition.AskPriceGreaterThanStopPrice">
            <summary>
            卖一价大于条件价
            </summary>
        </member>
        <member name="F:Ats.Core.EnumContingentCondition.AskPriceGreaterEqualStopPrice">
            <summary>
            卖一价大于等于条件价
            </summary>
        </member>
        <member name="F:Ats.Core.EnumContingentCondition.AskPriceLesserThanStopPrice">
            <summary>
            卖一价小于条件价
            </summary>
        </member>
        <member name="F:Ats.Core.EnumContingentCondition.AskPriceLesserEqualStopPrice">
            <summary>
            卖一价小于等于条件价
            </summary>
        </member>
        <member name="F:Ats.Core.EnumContingentCondition.BidPriceGreaterThanStopPrice">
            <summary>
            买一价大于条件价
            </summary>
        </member>
        <member name="F:Ats.Core.EnumContingentCondition.BidPriceGreaterEqualStopPrice">
            <summary>
            买一价大于等于条件价
            </summary>
        </member>
        <member name="F:Ats.Core.EnumContingentCondition.BidPriceLesserThanStopPrice">
            <summary>
            买一价小于条件价
            </summary>
        </member>
        <member name="F:Ats.Core.EnumContingentCondition.BidPriceLesserEqualStopPrice">
            <summary>
            买一价小于等于条件价
            </summary>
        </member>
        <member name="T:Ats.Core.EnumLifePhase">
            <summary>
            合约生命周期状态
            </summary>
        </member>
        <member name="F:Ats.Core.EnumLifePhase.未上市">
            <summary>
            未上市
            </summary>
        </member>
        <member name="F:Ats.Core.EnumLifePhase.上市">
            <summary>
            上市
            </summary>
        </member>
        <member name="F:Ats.Core.EnumLifePhase.停牌">
            <summary>
            停牌
            </summary>
        </member>
        <member name="F:Ats.Core.EnumLifePhase.到期">
            <summary>
            到期
            </summary>
        </member>
        <member name="T:Ats.Core.EnumHedgeFlag">
            <summary>
            投机套保标志
            </summary>
        </member>
        <member name="F:Ats.Core.EnumHedgeFlag.投机">
            <summary>
            投机
            </summary>
        </member>
        <member name="F:Ats.Core.EnumHedgeFlag.套利">
            <summary>
            套利
            </summary>
        </member>
        <member name="F:Ats.Core.EnumHedgeFlag.保值">
            <summary>
            保值
            </summary>
        </member>
        <member name="T:Ats.Core.EnumPositionDate">
            <summary>
            持仓日期类型
            </summary>
        </member>
        <member name="T:Ats.Core.EnumOrderSubmitStatus">
            <summary>
            TFtdcOrderSubmitStatusType是一个报单提交状态类型
            </summary>
        </member>
        <member name="F:Ats.Core.EnumOrderSubmitStatus.InsertSubmitted">
            <summary>
            已经提交
            </summary>
        </member>
        <member name="F:Ats.Core.EnumOrderSubmitStatus.CancelSubmitted">
            <summary>
            撤单已经提交
            </summary>
        </member>
        <member name="F:Ats.Core.EnumOrderSubmitStatus.ModifySubmitted">
            <summary>
            修改已经提交
            </summary>
        </member>
        <member name="F:Ats.Core.EnumOrderSubmitStatus.Accepted">
            <summary>
            已经接受
            </summary>
        </member>
        <member name="F:Ats.Core.EnumOrderSubmitStatus.InsertRejected">
            <summary>
            报单已经被拒绝
            </summary>
        </member>
        <member name="F:Ats.Core.EnumOrderSubmitStatus.CancelRejected">
            <summary>
            撤单已经被拒绝
            </summary>
        </member>
        <member name="F:Ats.Core.EnumOrderSubmitStatus.ModifyRejected">
            <summary>
            修改已经被拒绝
            </summary>
        </member>
        <member name="T:Ats.Core.EnumOrderStatus">
            <summary>
            报单状态类型
            </summary>
        </member>
        <member name="F:Ats.Core.EnumOrderStatus.AllTraded">
            <summary>
            全部成交
            </summary>
        </member>
        <member name="F:Ats.Core.EnumOrderStatus.PartTradedQueueing">
            <summary>
            部分成交还在队列中
            </summary>
        </member>
        <member name="F:Ats.Core.EnumOrderStatus.PartTradedNotQueueing">
            <summary>
            部分成交不在队列中
            </summary>
        </member>
        <member name="F:Ats.Core.EnumOrderStatus.NoTradeQueueing">
            <summary>
            未成交还在队列中
            </summary>
        </member>
        <member name="F:Ats.Core.EnumOrderStatus.NoTradeNotQueueing">
            <summary>
            未成交不在队列中
            </summary>
        </member>
        <member name="F:Ats.Core.EnumOrderStatus.Canceled">
            <summary>
            撤单
            </summary>
        </member>
        <member name="F:Ats.Core.EnumOrderStatus.Unknown">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:Ats.Core.EnumOrderStatus.NotTouched">
            <summary>
            尚未触发
            </summary>
        </member>
        <member name="F:Ats.Core.EnumOrderStatus.Touched">
            <summary>
            已触发
            </summary>
        </member>
        <member name="T:Ats.Core.EnumParkedOrderStatus">
            <summary>
            TFtdcParkedOrderStatusType是一个预埋单状态类型
            </summary>
        </member>
        <member name="F:Ats.Core.EnumParkedOrderStatus.NotSend">
            <summary>
            未发送
            </summary>
        </member>
        <member name="F:Ats.Core.EnumParkedOrderStatus.Send">
            <summary>
            已发送
            </summary>
        </member>
        <member name="F:Ats.Core.EnumParkedOrderStatus.Deleted">
            <summary>
            已删除
            </summary>
        </member>
        <member name="T:Ats.Core.EnumOrderType">
            <summary>
            报单类型
            </summary>
        </member>
        <member name="F:Ats.Core.EnumOrderType.Normal">
            <summary>
            正常
            </summary>
        </member>
        <member name="F:Ats.Core.EnumOrderType.DeriveFromQuote">
            <summary>
            报价衍生
            </summary>
        </member>
        <member name="F:Ats.Core.EnumOrderType.DeriveFromCombination">
            <summary>
            组合衍生
            </summary>
        </member>
        <member name="F:Ats.Core.EnumOrderType.Combination">
            <summary>
            组合报单
            </summary>
        </member>
        <member name="F:Ats.Core.EnumOrderType.ConditionalOrder">
            <summary>
            条件单
            </summary>
        </member>
        <member name="F:Ats.Core.EnumOrderType.Swap">
            <summary>
            互换单
            </summary>
        </member>
        <member name="T:Ats.Core.FutureProduct">
            <summary>
            期货品种
            </summary>
        </member>
        <member name="M:Ats.Core.FutureProduct.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Ats.Core.FutureProduct.#ctor(System.String,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="prodID"></param>
            <param name="prodName"></param>
            <param name="exchID"></param>
        </member>
        <member name="M:Ats.Core.FutureProduct.ToString">
            <summary>
            转化成字符串
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ats.Core.FutureProduct.ProductID">
            <summary>
            产品代码
            </summary>
        </member>
        <member name="P:Ats.Core.FutureProduct.ProductName">
            <summary>
            产品名称
            </summary>
        </member>
        <member name="P:Ats.Core.FutureProduct.ExchangeID">
            <summary>
            交易所代码
            </summary>
        </member>
        <member name="P:Ats.Core.FutureProduct.AllSlice">
            <summary>
            可交易时间列表
            比如股市：(9:30-11:30),(13:00-15:00)
            </summary>
        </member>
        <member name="T:Ats.Core.FutureSeries">
            <summary>
            期货序列
            </summary>
        </member>
        <member name="M:Ats.Core.FutureSeries.Contains(System.String)">
            <summary>
            是否包含合约号为FutureID的期货合约
            </summary>
            <param name="FutureID"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.FutureSeries.Add(Ats.Core.Future)">
            <summary>
            队列中加入
            </summary>
            <param name="future"></param>
        </member>
        <member name="T:Ats.Core.SettlementInfo">
            <summary>
            结算信息
            </summary>
        </member>
        <member name="F:Ats.Core.SettlementInfo.Content">
            <summary>
            结算信息文本内容
            </summary>
        </member>
        <member name="F:Ats.Core.SettlementInfo.ConfirmTime">
            <summary>
            确认日期
            </summary>
        </member>
        <member name="T:Ats.Core.Exchange">
            <summary>
            交易所
            期货：中金所、上期所、郑商所、大商所
            股票：上交所、深交所
            </summary>
        </member>
        <member name="M:Ats.Core.Exchange.ToString">
            <summary>
            转换成字符串
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ats.Core.Exchange.ExchangeID">
            <summary>
            交易所编号
            </summary>
        </member>
        <member name="P:Ats.Core.Exchange.ExchangeName">
            <summary>
            交易所名称
            </summary>
        </member>
        <member name="P:Ats.Core.Exchange.CloseTime">
            <summary>
            闭市时间
            </summary>
        </member>
        <member name="P:Ats.Core.Exchange.OpenTime">
            <summary>
            开市时间
            </summary>
        </member>
        <member name="P:Ats.Core.Exchange.TimeNow">
            <summary>
            市场当前时间
            </summary>
        </member>
        <member name="P:Ats.Core.Exchange.BaseTime">
            <summary>
            请勿随意改动
            </summary>
        </member>
        <member name="P:Ats.Core.Exchange.DiffTime">
            <summary>
            请勿随意改动
            </summary>
        </member>
        <member name="P:Ats.Core.Exchange.AllSlice">
            <summary>
            可交易时间列表
            比如股市：(9:30-11:30),(13:00-15:00)
            </summary>
        </member>
        <member name="P:Ats.Core.Exchange.ExchangeEnum">
            <summary>
            交易所枚举类型
            </summary>
        </member>
        <member name="T:Ats.Core.IFunction">
            <summary>
            混合功能接口
            </summary>
        </member>
        <member name="M:Ats.Core.IFunction.PlaySound(Ats.Core.EnumSound)">
            <summary>
            播放声音
            </summary>
            <param name="sound"></param>
        </member>
        <member name="M:Ats.Core.IFunction.ShowMessage(System.String)">
            <summary>
            弹出窗口显示消息
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Ats.Core.IFunction.GetAccount(Ats.Core.EnumMarket,System.Int32)">
            <summary>
            查询账户
            </summary>
            <param name="market"></param>
            <param name="idx"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.IFunction.GetAccount(Ats.Core.EnumMarket,System.String)">
            <summary>
            查询账户
            </summary>
            <param name="market"></param>
            <param name="LogAccountID"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.IFunction.ModifyStockMoney(System.Double)">
            <summary>
            修改股票账户资金
            </summary>
            <param name="money"></param>
        </member>
        <member name="M:Ats.Core.IFunction.ModifyFutureMoney(System.Double)">
            <summary>
            修改期货账户资金
            </summary>
            <param name="money"></param>
        </member>
        <member name="M:Ats.Core.IFunction.LoadTickSeries(Ats.Core.EnumMarket,System.String,System.String,System.DateTime)">
            <summary>
            加载历史Tick数据
            </summary>
            <param name="market">市场</param>
            <param name="instrumentId">品种代码</param>
            <param name="exchangId">交易所ID</param>
            <param name="tradingDay">交易日</param>
            <returns>Tick数据</returns>
        </member>
        <member name="M:Ats.Core.IFunction.LoadTickSeries(Ats.Core.EnumMarket,System.String,System.String,Ats.Core.TimeSlice,System.DateTime,System.DateTime)">
            <summary>
            加载历史Tick数据
            </summary>
            <param name="market">市场</param>
            <param name="instrumentId">品种代码</param>
            <param name="exchangId">交易所ID</param>
            <param name="tradingtime">时间片段</param>
            <param name="from">开始时间</param>
            <param name="to">结束时间</param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.IFunction.LoadMinuteBarSeries(Ats.Core.EnumMarket,System.String,System.DateTime)">
            <summary>
            静态读取某一天的分钟线
            不同于Get，读取的K线不会维护
            </summary>
            <param name="market"></param>
            <param name="insID"></param>
            <param name="tradingDay"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.IFunction.GetTickBuffer">
            <summary>
            获取触发品种的Tick
            当触发品种是期货是才有效
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.IFunction.GetPriceBuffer">
            <summary>
            获取价格缓存
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.IFunction.GetBarSeries(Ats.Core.EnumMarket,System.String,System.Int32,Ats.Core.EnumBarType,System.DateTime,Ats.Core.EnumRestoration)">
            <summary>
            统一的查询K线函数-基于时间回溯
            </summary>
            <param name="market"></param>
            <param name="InsID"></param>
            <param name="Interval"></param>
            <param name="bar"></param>
            <param name="beginTime"></param>
            <param name="restore"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.IFunction.GetBarSeries(Ats.Core.EnumMarket,System.String,System.Int32,Ats.Core.EnumBarType,System.Int32,Ats.Core.EnumRestoration)">
            <summary>
            统一的查询K线函数-基于根数回溯
            </summary>
            <param name="market"></param>
            <param name="instrumentID"></param>
            <param name="Interval"></param>
            <param name="bar"></param>
            <param name="MaxLength"></param>
            <param name="restore"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.IFunction.Wait(System.Int32)">
            <summary>
            休眠T毫秒
            </summary>
            <param name="T">休眠T毫秒</param>
        </member>
        <member name="M:Ats.Core.IFunction.SwitchTriggerInstrument(System.String)">
            <summary>
            切换驱动品种
            </summary>
            <param name="instrumentid">品种ID</param>
        </member>
        <member name="M:Ats.Core.IFunction.StartTimer(System.Int32,System.Threading.TimerCallback,System.String)">
            <summary>
            启动时钟任务,马上执行1次，之后间隔Millisecond毫秒执行
            </summary>
            <param name="Millisecond">时钟任务间隔（单位:毫秒）</param>
            <param name="Callback">定时任务的执行回调函数</param>
            <returns>该定时任务的ID</returns>
        </member>
        <member name="M:Ats.Core.IFunction.StopTimer(System.String)">
            <summary>
            停止时钟任务
            </summary>
            <param name="TimerID">时钟任务ID</param>
        </member>
        <member name="M:Ats.Core.IFunction.GetAllTimerIDs">
            <summary>
            获取所有时钟任务的ID
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ats.Core.IFunction.Now">
            <summary>
            当前时刻
            </summary>
        </member>
        <member name="P:Ats.Core.IFunction.TradingDate">
            <summary>
            交易所日期
            </summary>
        </member>
        <member name="P:Ats.Core.IFunction.TriggerInstrument">
            <summary>
            驱动品种代码
            </summary>
        </member>
        <member name="P:Ats.Core.IFunction.WorkMode">
            <summary>
            策略的运行模式
            </summary>
        </member>
        <member name="P:Ats.Core.IFunction.ProjectName">
            <summary>
            工程名称
            </summary>
        </member>
        <member name="P:Ats.Core.IFunction.StartSimulateDay">
            <summary>
            开始复盘日期
            </summary>
        </member>
        <member name="P:Ats.Core.IFunction.EndSimulateDay">
            <summary>
            结束复盘日期
            </summary>
        </member>
        <member name="P:Ats.Core.IFunction.AllStocks">
            <summary>
            所有的股票
            </summary>
        </member>
        <member name="P:Ats.Core.IFunction.AllFutureOptions">
            <summary>
            开盘到现在总的时间段
            </summary>
            <param name="exchange">交易所</param>
            <returns>时间段</returns>
        </member>
        <member name="P:Ats.Core.IFunction.AllAbordInstruments">
            <summary>
            外盘品种
            </summary>
        </member>
        <member name="T:Ats.Core.Indicator">
            <summary>
            指标
            </summary>
        </member>
        <member name="F:Ats.Core.Indicator._bValid">
            <summary>
            是否正确
            </summary>
        </member>
        <member name="F:Ats.Core.Indicator._barlist">
            <summary>
            序列数据
            </summary>
        </member>
        <member name="M:Ats.Core.Indicator.Calculate">
            <summary>
            指标算法
            </summary>
        </member>
        <member name="M:Ats.Core.Indicator.Ago(System.Int32)">
            <summary>
            回溯
            </summary>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.Indicator.Cross(Ats.Core.Indicator)">
            <summary>
            当前时刻，当前指标"上穿/下穿/不相交"给定指标indicator。等同于 Cross(indicator, 0)
            </summary>
            <param name="indicator">给定指标</param>
            <returns>上穿(Above)/下穿(Below)/不相交(None)</returns>
        </member>
        <member name="M:Ats.Core.Indicator.Cross(Ats.Core.Indicator,System.Int32)">
            <summary>
            当前时刻向前agoN个时刻，当前指标"上穿/下穿/不相交"给定指标indicator
            </summary>
            <param name="indicator">给定指标</param>
            <param name="agoN">向前agoN个时刻</param>
            <returns>上穿(Above)/下穿(Below)/不相交(None)</returns>
        </member>
        <member name="M:Ats.Core.Indicator.Cross(Ats.Core.BarSeries)">
            <summary>
            当前时刻，当前指标"上穿/下穿/不相交"给定K线序列（K线中最后一个价格）。等同于 Cross(barlist, 0)
            </summary>
            <param name="barlist">给定K线序列</param>
            <returns>上穿(Above)/下穿(Below)/不相交(None)</returns>
        </member>
        <member name="M:Ats.Core.Indicator.Cross(Ats.Core.BarSeries,System.Int32)">
            <summary>
            当前时刻向前agoN个时刻，当前指标"上穿/下穿/不相交"给定K线序列（K线中最后一个价格）。
            </summary>
            <param name="barlist">给定K线序列</param>
            <param name="agoN">向前agoN个时刻</param>
            <returns>上穿(Above)/下穿(Below)/不相交(None)</returns>
        </member>
        <member name="M:Ats.Core.Indicator.Cross(Ats.Core.BarSeries,Ats.Core.BarData)">
            <summary>
            
            </summary>
            <param name="barlist"></param>
            <param name="bardata"></param>
            <returns></returns>
        </member>
        <member name="P:Ats.Core.Indicator.OrigBar">
            <summary>
            指标序列数据
            </summary>
        </member>
        <member name="P:Ats.Core.Indicator.IsValid">
            <summary>
            是否正确
            </summary>
        </member>
        <member name="P:Ats.Core.Indicator.Count">
            <summary>
            个数
            </summary>
        </member>
        <member name="P:Ats.Core.Indicator.Item(System.Int32)">
            <summary>
            索引
            </summary>
            <param name="index">位置</param>
            <returns></returns>
        </member>
        <member name="P:Ats.Core.Indicator.Last">
            <summary>
            最后一个数据
            </summary>
        </member>
        <member name="P:Ats.Core.Indicator.First">
            <summary>
            第一个数据
            </summary>
        </member>
        <member name="T:Ats.Core.ParameterAttribute">
            <summary>
            参数化属性，用于标识可配置变量
            </summary>
        </member>
        <member name="F:Ats.Core.ParameterAttribute.Category">
            <summary>
            目录
            </summary>
        </member>
        <member name="F:Ats.Core.ParameterAttribute.Display">
            <summary>
            显示内容
            </summary>
        </member>
        <member name="F:Ats.Core.ParameterAttribute.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="F:Ats.Core.ParameterAttribute.ReadOnly">
            <summary>
            是否只读
            </summary>
        </member>
        <member name="F:Ats.Core.ParameterAttribute.Visible">
            <summary>
            是否可见
            </summary>
        </member>
        <member name="M:Ats.Core.ParameterAttribute.#ctor">
            <summary>
            用于标识可配置变量
            </summary>
        </member>
        <member name="M:Ats.Core.ParameterAttribute.#ctor(System.String)">
            <summary>
            用于标识可配置变量
            </summary>
            <param name="display">显示名称</param>
        </member>
        <member name="M:Ats.Core.ParameterAttribute.#ctor(System.String,System.String)">
            <summary>
            用于标识可配置变量
            </summary>
            <param name="display">显示名称</param>
            <param name="desc">描述</param>
        </member>
        <member name="M:Ats.Core.ParameterAttribute.#ctor(System.String,System.String,System.String)">
            <summary>
            用于标识可配置变量
            </summary>
            <param name="display">显示名称</param>
            <param name="desc">描述</param>
            <param name="cat">类别</param>
        </member>
        <member name="M:Ats.Core.ParameterAttribute.#ctor(System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            用于标识可配置变量
            </summary>
            <param name="display">显示名称</param>
            <param name="desc">描述</param>
            <param name="cat">类别</param>
            <param name="_readonly">只读</param>
            <param name="_visible">可见</param>
        </member>
        <member name="T:Ats.Core.Stock">
            <summary>
            股票
            </summary>
        </member>
        <member name="F:Ats.Core.Stock._StockType">
            <summary>
            股票类型
            </summary>
        </member>
        <member name="M:Ats.Core.Stock.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Ats.Core.Stock.StockLevel">
            <summary>
            证券级别
            </summary>
        </member>
        <member name="P:Ats.Core.Stock.StockType">
            <summary>
            股票类型
            </summary>
        </member>
        <member name="T:Ats.Core.EnumStockLevel">
            <summary>
            证券级别
            </summary>
        </member>
        <member name="T:Ats.Core.EnumMarketState">
            <summary>
            股票市场状态
            </summary>
        </member>
        <member name="T:Ats.Core.EnumStockType">
            <summary>
            股票类型
            </summary>
        </member>
        <member name="F:Ats.Core.EnumStockType.SH_国债回购">
            <summary>
            例如204001
            </summary>
        </member>
        <member name="F:Ats.Core.StockSeries._idx">
            <summary>
            股票的位置
            </summary>
        </member>
        <member name="F:Ats.Core.StockSeries._stocks">
            <summary>
            股票列表
            </summary>
        </member>
        <member name="M:Ats.Core.StockSeries.Contains(System.String)">
            <summary>
            是否包含股票
            </summary>
            <param name="StockCode">股票代码</param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.StockSeries.Add(Ats.Core.Stock)">
            <summary>
            队列中加入股票
            </summary>
            <param name="stock"></param>
        </member>
        <member name="T:Ats.Core.TaskAttribute">
            <summary>
            任务属性
            </summary>
        </member>
        <member name="F:Ats.Core.TaskAttribute.Time">
            <summary>
            时间
            </summary>
        </member>
        <member name="F:Ats.Core.TaskAttribute.Display">
            <summary>
            显示内容
            </summary>
        </member>
        <member name="F:Ats.Core.TaskAttribute.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="M:Ats.Core.TaskAttribute.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:Ats.Core.Order">
            <summary>
            委托
            统一期货委托、股票委托
            </summary>
        </member>
        <member name="F:Ats.Core.Order._LocalID">
            <summary>
            本地ID（用来将本地保存的物理委托和CTP柜台返回的物理委托对应）
            </summary>
        </member>
        <member name="F:Ats.Core.Order._StrategyToken">
            <summary>
            策略令牌
            </summary>
        </member>
        <member name="F:Ats.Core.Order._GUID">
            <summary>
            内部GUID
            </summary>
        </member>
        <member name="F:Ats.Core.Order._Market">
            <summary>
            市场
            </summary>
        </member>
        <member name="F:Ats.Core.Order._TimeForce">
            <summary>
            时间类型
            </summary>
        </member>
        <member name="F:Ats.Core.Order._HedgeFlag">
            <summary>
            投机套保标识
            </summary>
        </member>
        <member name="F:Ats.Core.Order._volumeWithdraw">
            <summary>
            已撤数量
            恒生底层提供
            </summary>
        </member>
        <member name="F:Ats.Core.Order._insertTime">
            <summary>
            委托报入时间
            Query时返回的是柜台收到的时间
            </summary>
        </member>
        <member name="F:Ats.Core.Order._BasketID">
            <summary>
            篮子ID
            </summary>
        </member>
        <member name="F:Ats.Core.Order.OrderRejectReason">
            <summary>
            报单被拒绝原因
            </summary>
        </member>
        <member name="F:Ats.Core.Order.TradingDay">
            <summary>
            交易日
            </summary>
        </member>
        <member name="F:Ats.Core.Order.OrderType">
            <summary>
            报单类型
            </summary>
        </member>
        <member name="F:Ats.Core.Order._statusmsg">
            <summary>
            消息字段
            </summary>
        </member>
        <member name="M:Ats.Core.Order.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Ats.Core.Order.Copy(Ats.Core.Order)">
            <summary>
            拷贝
            </summary>
            <param name="order"></param>
        </member>
        <member name="M:Ats.Core.Order.ToString">
            <summary>
            转成字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.Order.Equals(System.Object)">
            <summary>
            判断2个委托实例是否相等
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:Ats.Core.Order.BasketID">
            <summary>
            篮子ID
            如果不属于篮子，则为空
            </summary>
        </member>
        <member name="P:Ats.Core.Order.FundUnit">
            <summary>
            资金单元
            </summary>
        </member>
        <member name="P:Ats.Core.Order.TimeForce">
            <summary>
            时间类型
            </summary>
        </member>
        <member name="P:Ats.Core.Order.OrderSubmitStatus">
            <summary>
            报单提交状态
            </summary>
        </member>
        <member name="P:Ats.Core.Order.VolumeWithdraw">
            <summary>
            已经撤单的数量
            </summary>
        </member>
        <member name="P:Ats.Core.Order.MQOrderStatus">
            <summary>
            将各个底层通道的委托状态在MQ策略层面进行一次统一
            唯一的确定一个委托的状态
            </summary>
        </member>
        <member name="P:Ats.Core.Order.OrderStatus">
            <summary>
            报单状态
            </summary>
        </member>
        <member name="P:Ats.Core.Order.BalanceTraded">
            <summary>
            委托成交金额
            </summary>
        </member>
        <member name="P:Ats.Core.Order.StatusMsg">
            <summary>
            状态信息
            </summary> 
        </member>
        <member name="P:Ats.Core.Order.LocalID">
            <summary>
            本地ID,不同的通道不一样
            CTP_FrontID_SessionID_OrderRef_InstrumentID
            UFX_?_?_?
            </summary>
        </member>
        <member name="P:Ats.Core.Order.StrategyToken">
            <summary>
            策略令牌
            </summary>
        </member>
        <member name="P:Ats.Core.Order.GUID">
            <summary>
            全局唯一ID，Order创建时自动生成
            </summary>
        </member>
        <member name="P:Ats.Core.Order.InstrumentType">
            <summary>
            品种类型：股票、期货
            </summary>
        </member>
        <member name="P:Ats.Core.Order.HedgeFlag">
            <summary>
            投机套保标识
            </summary>
        </member>
        <member name="P:Ats.Core.Order.PriceType">
            <summary>
            委托价格类型，限价、市价等等
            </summary>
        </member>
        <member name="P:Ats.Core.Order.OrderSysID">
            <summary>
            报单系统编号
            </summary>
        </member>
        <member name="P:Ats.Core.Order.BrokerID">
            <summary>
            经纪公司代码
            </summary>
        </member>
        <member name="P:Ats.Core.Order.InvestorID">
            <summary>
            交易账户ID
            投资者代码
            </summary>
        </member>
        <member name="P:Ats.Core.Order.UserID">
            <summary>
            发出这个委托的系统用户ID
            </summary>
        </member>
        <member name="P:Ats.Core.Order.InstrumentID">
            <summary>
            金融工具代码
            期货合约, 股票代码
            </summary>
        </member>
        <member name="P:Ats.Core.Order.ExchangeID">
            <summary>
            交易所代码
            上交所SH 深交所SZ
            </summary>
        </member>
        <member name="P:Ats.Core.Order.Direction">
            <summary>
            委托方向
            买入或者卖出
            </summary>
        </member>
        <member name="P:Ats.Core.Order.OpenOrClose">
            <summary>
            开仓平仓
            对于股票,该项无效
            </summary>
        </member>
        <member name="P:Ats.Core.Order.LimitPrice">
            <summary>
            限价委托的价格
            </summary>
        </member>
        <member name="P:Ats.Core.Order.Volume">
            <summary>
            委托数量（股票：股；期货：手）
            </summary>
        </member>
        <member name="P:Ats.Core.Order.VolumeTraded">
            <summary>
            今成交数量（股票：股；期货：手）
            </summary>
        </member>
        <member name="P:Ats.Core.Order.VolumeLeft">
            <summary>
            剩余数量（股票：股；期货：手）
            </summary>
        </member>
        <member name="P:Ats.Core.Order.InsertTime">
            <summary>
            委托报入时间（基于Tick行情）
            </summary> 
        </member>
        <member name="P:Ats.Core.Order.IsCompleted">
            <summary>
            是否是终态
            </summary>
        </member>
        <member name="T:Ats.Core.OrderSeries">
            <summary>
            期货委托列表
            </summary>
        </member>
        <member name="M:Ats.Core.OrderSeries.GetOrder(System.String,Ats.Core.EnumBuySell,Ats.Core.EnumOpenClose)">
            <summary>
            仅用于期货，从序列中查询获取委托
            </summary>
            <param name="InstrumentID">代码</param>
            <param name="direction">买卖方向</param>
            <param name="OpenClose">开平</param>
            <returns>查询到的第一个委托</returns>
        </member>
        <member name="M:Ats.Core.OrderSeries.GetOrder(System.String,Ats.Core.EnumBuySell)">
            <summary>
            仅用于股票，从序列中查询获取委托
            </summary>
            <param name="InstrumentID"></param>
            <param name="direction"></param>
            <returns></returns>
        </member>
        <member name="T:Ats.Core.Position">
            <summary>
            持仓汇总
            投资者头寸、持仓、头寸
            比如在期货交易中建仓时,买入期货合约后所持有的头寸叫多头头寸,简称多头;
            卖出期货合约后所持有的头寸叫空头头寸,简称空头。
            商品未平仓多头合约与未平仓空头合约之间的差额就叫做净头寸。
            持仓汇总
            </summary>
        </member>
        <member name="F:Ats.Core.Position._ExchangeID">
            <summary>
            累积买入量
            </summary>
        </member>
        <member name="M:Ats.Core.Position.ToString">
            <summary>
            转化成字符串
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ats.Core.Position.ExchangeID">
            <summary>
            交易所ID
            这个是新加的，注意维护
            </summary>
        </member>
        <member name="P:Ats.Core.Position.InstrumentType">
            <summary>
            品种类型：股票、期货
            </summary>
        </member>
        <member name="P:Ats.Core.Position.InstrumentID">
            <summary>
            合约代码
            </summary>
        </member>
        <member name="P:Ats.Core.Position.BrokerID">
            <summary>
            经纪公司代码
            </summary>
        </member>
        <member name="P:Ats.Core.Position.InvestorID">
            <summary>
            投资者代码
            等效于股票的StockAccountNo
            </summary>
        </member>
        <member name="P:Ats.Core.Position.PosiDirection">
            <summary>
            持仓多空方向
            </summary>
        </member>
        <member name="P:Ats.Core.Position.HedgeFlag">
            <summary>
            投机套保标志
            </summary>
        </member>
        <member name="P:Ats.Core.Position.PositionDate">
            <summary>
            持仓日期
            </summary>
        </member>
        <member name="P:Ats.Core.Position.YdPosition">
            <summary>
            昨日持仓量
            </summary>
        </member>
        <member name="P:Ats.Core.Position.Volume">
            <summary>
            总持仓量=最终的净持仓总量
            </summary>
        </member>
        <member name="P:Ats.Core.Position.EnableVolume">
            <summary>
            可平仓量
            期货：所有持仓量都可以平仓
            股票(T+1)：只有昨仓才可以卖出（平仓）
            </summary>e
        </member>
        <member name="P:Ats.Core.Position.PositionCost">
            <summary>
            持仓成本
            考虑盈利，卖出股票后会降低成本
            相当于AvgCost
            </summary>
        </member>
        <member name="P:Ats.Core.Position.OpenCost">
            <summary>
            开仓成本
            股票：买入成本
            相当于Alpha组件里的BuyCost
            </summary>
        </member>
        <member name="P:Ats.Core.Position.UseMargin">
            <summary>
            持仓占用保证金
            股票没有保证金制度
            </summary>
        </member>
        <member name="P:Ats.Core.Position.CloseProfit">
            <summary>
            平仓盈亏
            </summary>
        </member>
        <member name="P:Ats.Core.Position.PositionProfit">
            <summary>
            持仓盈亏(浮动盈亏)
            </summary>
        </member>
        <member name="P:Ats.Core.Position.SettlementPrice">
            <summary>
            本次结算价
            </summary>
        </member>
        <member name="P:Ats.Core.Position.CombPosition">
            <summary>
            组合成交形成的持仓
            </summary>
        </member>
        <member name="P:Ats.Core.Position.TodayPosition">
            <summary>
            今日持仓
            今天开平的总量（不同于总持仓量）
            </summary>
        </member>
        <member name="P:Ats.Core.Position.Price">
            <summary>
            现价
            可以根据盈亏和持仓量反算
            </summary>
        </member>
        <member name="T:Ats.Core.PositionSeries">
            <summary>
            持仓列表
            </summary>
        </member>
        <member name="M:Ats.Core.PositionSeries.Contains(System.String)">
            <summary>
            是否包含某个代码的金融工具的头寸
            </summary>
            <param name="ID">金融工具代码</param>
            <returns>是否包含</returns>
        </member>
        <member name="M:Ats.Core.PositionSeries.GetPosition(System.String,Ats.Core.EnumPositionDirection,Ats.Core.EnumHedgeFlag)">
            <summary>
            获取头寸信息
            </summary>
            <param name="id">代码</param>
            <param name="PosiDirect">方向：做多做空</param>
            <param name="hedgeFlag">投机套保标志</param>
            <returns>头寸实例</returns>
        </member>
        <member name="M:Ats.Core.PositionSeries.GetPosition(System.String)">
            <summary>
            获取头寸信息(任意方向)
            </summary>
            <param name="id">代码</param>
            <returns>持仓列表</returns>
        </member>
        <member name="M:Ats.Core.PositionSeries.ToString">
            <summary>
            转化成字符串
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ats.Core.PositionSeries.Item(System.String)">
            <summary>
            根据金融工具ID返回对应的头寸
            </summary>
            <param name="ID">代码</param>
            <returns>持仓</returns>
        </member>
        <member name="P:Ats.Core.PositionSeries.LongMargin">
            <summary>
            多头保证金
            计算方法：所有多头头寸占用的保证金
            </summary>
        </member>
        <member name="P:Ats.Core.PositionSeries.ShortMargin">
            <summary>
            空头保证金
            计算方法：所有空头头寸占用的保证金
            </summary>
        </member>
        <member name="P:Ats.Core.PositionSeries.Margin">
            <summary>
            占用保证金之和
            </summary>
        </member>
        <member name="P:Ats.Core.PositionSeries.PositionProfit">
            <summary>
            所有头寸持仓利润之和
            </summary>
        </member>
        <member name="T:Ats.Core.Quote">
            <summary>
            盘口信息
            </summary>
        </member>
        <member name="M:Ats.Core.Quote.Clone">
            <summary>
            克隆
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.Quote.ToString">
            <summary>
            转化成字符串
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ats.Core.Quote.AskPrice1">
            <summary>
            卖价1
            </summary>
        </member>
        <member name="P:Ats.Core.Quote.AskPrice2">
            <summary>
            卖价2
            </summary>
        </member>
        <member name="P:Ats.Core.Quote.AskPrice3">
            <summary>
            卖价3
            </summary>
        </member>
        <member name="P:Ats.Core.Quote.AskPrice4">
            <summary>
            卖价4
            </summary>
        </member>
        <member name="P:Ats.Core.Quote.AskPrice5">
            <summary>
            卖价5
            </summary>
        </member>
        <member name="P:Ats.Core.Quote.AskPrice6">
            <summary>
            卖价6
            </summary>
        </member>
        <member name="P:Ats.Core.Quote.AskPrice7">
            <summary>
            卖价7
            </summary>
        </member>
        <member name="P:Ats.Core.Quote.AskPrice8">
            <summary>
            卖价8
            </summary>
        </member>
        <member name="P:Ats.Core.Quote.AskPrice9">
            <summary>
            卖价9
            </summary>
        </member>
        <member name="P:Ats.Core.Quote.AskPrice10">
            <summary>
            卖价10
            </summary>
        </member>
        <member name="P:Ats.Core.Quote.AskVolume1">
            <summary>
            卖量1
            </summary>
        </member>
        <member name="P:Ats.Core.Quote.AskVolume2">
            <summary>
            卖量2
            </summary>
        </member>
        <member name="P:Ats.Core.Quote.AskVolume3">
            <summary>
            卖量3
            </summary>
        </member>
        <member name="P:Ats.Core.Quote.AskVolume4">
            <summary>
            卖量4
            </summary>
        </member>
        <member name="P:Ats.Core.Quote.AskVolume5">
            <summary>
            卖量5
            </summary>
        </member>
        <member name="P:Ats.Core.Quote.AskVolume6">
            <summary>
            卖量6
            </summary>
        </member>
        <member name="P:Ats.Core.Quote.AskVolume7">
            <summary>
            卖量7
            </summary>
        </member>
        <member name="P:Ats.Core.Quote.AskVolume8">
            <summary>
            卖量8
            </summary>
        </member>
        <member name="P:Ats.Core.Quote.AskVolume9">
            <summary>
            卖量9
            </summary>
        </member>
        <member name="P:Ats.Core.Quote.AskVolume10">
            <summary>
            卖量10
            </summary>
        </member>
        <member name="P:Ats.Core.Quote.BidPrice1">
            <summary>
            买价1
            </summary>
        </member>
        <member name="P:Ats.Core.Quote.BidPrice2">
            <summary>
            买价2
            </summary>
        </member>
        <member name="P:Ats.Core.Quote.BidPrice3">
            <summary>
            买价3
            </summary>
        </member>
        <member name="P:Ats.Core.Quote.BidPrice4">
            <summary>
            买价4
            </summary>
        </member>
        <member name="P:Ats.Core.Quote.BidPrice5">
            <summary>
            买价5
            </summary>
        </member>
        <member name="P:Ats.Core.Quote.BidPrice6">
            <summary>
            买价6
            </summary>
        </member>
        <member name="P:Ats.Core.Quote.BidPrice7">
            <summary>
            买价7
            </summary>
        </member>
        <member name="P:Ats.Core.Quote.BidPrice8">
            <summary>
            买价8
            </summary>
        </member>
        <member name="P:Ats.Core.Quote.BidPrice9">
            <summary>
            买价9
            </summary>
        </member>
        <member name="P:Ats.Core.Quote.BidPrice10">
            <summary>
            买价10
            </summary>
        </member>
        <member name="P:Ats.Core.Quote.BidVolume1">
            <summary>
            买量1
            </summary>
        </member>
        <member name="P:Ats.Core.Quote.BidVolume2">
            <summary>
            买量2
            </summary>
        </member>
        <member name="P:Ats.Core.Quote.BidVolume3">
            <summary>
            买量3
            </summary>
        </member>
        <member name="P:Ats.Core.Quote.BidVolume4">
            <summary>
            买量4
            </summary>
        </member>
        <member name="P:Ats.Core.Quote.BidVolume5">
            <summary>
            买量5
            </summary>
        </member>
        <member name="P:Ats.Core.Quote.BidVolume6">
            <summary>
            买量6
            </summary>
        </member>
        <member name="P:Ats.Core.Quote.BidVolume7">
            <summary>
            买量7
            </summary>
        </member>
        <member name="P:Ats.Core.Quote.BidVolume8">
            <summary>
            买量8
            </summary>
        </member>
        <member name="P:Ats.Core.Quote.BidVolume9">
            <summary>
            买量9
            </summary>
        </member>
        <member name="P:Ats.Core.Quote.BidVolume10">
            <summary>
            买量10
            </summary>
        </member>
        <member name="P:Ats.Core.Quote.BidNumOrder1">
            <summary>
            实际买总委托笔数一
            </summary>
        </member>
        <member name="P:Ats.Core.Quote.AskNumOrder1">
            <summary>
            实际卖总委托笔数一
            </summary>
        </member>
        <member name="T:Ats.Core.Tick">
            <summary>
            Tick
            </summary>
        </member>
        <member name="F:Ats.Core.Tick.BidPriceLevel">
            <summary>
            买价深度
            </summary>
        </member>
        <member name="F:Ats.Core.Tick.AskPriceLevel">
            <summary>
            卖价深度
            </summary>
        </member>
        <member name="M:Ats.Core.Tick.ToString">
            <summary>
            转化成字符串
            </summary>
            <returns>Tick内容</returns>
        </member>
        <member name="M:Ats.Core.Tick.Clone">
            <summary>
            克隆
            </summary>
            <returns>克隆的实例</returns>
        </member>
        <member name="P:Ats.Core.Tick.InstrumentID">
            <summary>
            合约代码，股票代码
            </summary>
        </member>
        <member name="P:Ats.Core.Tick.ExchangeID">
            <summary>
            交易所代码（上期所SHFE，中金所:CFFEX，大商所:DCE，郑商所:CZCE）
            </summary>
        </member>
        <member name="P:Ats.Core.Tick.InstrumentType">
            <summary>
            期货，股票，还是期权
            </summary>
        </member>
        <member name="P:Ats.Core.Tick.DateTime">
            <summary>
            Tick时间
            自然时间
            </summary>
        </member>
        <member name="P:Ats.Core.Tick.TimeNow">
            <summary>
            Tick时间，不包含日期
            </summary>
        </member>
        <member name="P:Ats.Core.Tick.TradingDay">
            <summary>
            交易所给的交易日
            </summary>
        </member>
        <member name="P:Ats.Core.Tick.Quote">
            <summary>
            报价
            </summary>
        </member>
        <member name="P:Ats.Core.Tick.AskPrice1">
            <summary>
            卖一价
            </summary>
        </member>
        <member name="P:Ats.Core.Tick.AskVolume1">
            <summary>
            卖一量
            </summary>
        </member>
        <member name="P:Ats.Core.Tick.BidPrice1">
            <summary>
            买一价
            </summary>
        </member>
        <member name="P:Ats.Core.Tick.BidVolume1">
            <summary>
            买一量
            </summary>
        </member>
        <member name="P:Ats.Core.Tick.PreClosePrice">
            <summary>
            昨收盘
            </summary>
        </member>
        <member name="P:Ats.Core.Tick.OpenPrice">
            <summary>
            今开盘
            </summary>
        </member>
        <member name="P:Ats.Core.Tick.HighPrice">
            <summary>
            今最高价
            </summary>
        </member>
        <member name="P:Ats.Core.Tick.LowPrice">
            <summary>
            今最低价
            </summary>
        </member>
        <member name="P:Ats.Core.Tick.LastPrice">
            <summary>
            今最新价
            </summary>
        </member>
        <member name="P:Ats.Core.Tick.IOPV">
            <summary>
            净值
            </summary>
        </member>
        <member name="P:Ats.Core.Tick.Volume">
            <summary>
            今成交量
            </summary>
        </member>
        <member name="P:Ats.Core.Tick.Turnover">
            <summary>
            今成交金额
            </summary>
        </member>
        <member name="P:Ats.Core.Tick.UpLimit">
            <summary>
            涨停价
            </summary>
        </member>
        <member name="P:Ats.Core.Tick.DropLimit">
            <summary>
            跌停价
            </summary>
        </member>
        <member name="P:Ats.Core.Tick.OpenInterest">
            <summary>
            持仓量
            </summary>
        </member>
        <member name="P:Ats.Core.Tick.PreOpenInterest">
            <summary>
            昨持仓量
            </summary>
        </member>
        <member name="P:Ats.Core.Tick.PreSettlementPrice">
            <summary>
            昨结算价
            </summary>
        </member>
        <member name="P:Ats.Core.Tick.Change">
            <summary>
            涨跌幅
            例如-1.0就是下跌1.0%
            </summary>
        </member>
        <member name="P:Ats.Core.Tick.IfUpLimit">
            <summary>
            是否涨停
            </summary>
        </member>
        <member name="P:Ats.Core.Tick.IfDropLimit">
            <summary>
            是否跌停
            </summary>
        </member>
        <member name="P:Ats.Core.Tick.Status">
            <summary>
            Tick的状态信息
            这里采用万德的字段体系
            </summary>
        </member>
        <member name="P:Ats.Core.Tick.NumTrades">
            <summary>
            成交笔数
            </summary>
        </member>
        <member name="P:Ats.Core.Tick.TotalBidQty">
            <summary>
            委托买入总量
            </summary>
        </member>
        <member name="P:Ats.Core.Tick.TotalAskQty">
            <summary>
            委托卖出总量
            </summary>
        </member>
        <member name="P:Ats.Core.Tick.WeightedAvgBidPrice">
            <summary>
            加权平均委买价
            </summary>
        </member>
        <member name="P:Ats.Core.Tick.WeightedAvgAskPrice">
            <summary>
            加权平均委卖价
            </summary>
        </member>
        <member name="P:Ats.Core.Tick.BidNumOrder1">
            <summary>
            实际买总委托笔数一
            </summary>
        </member>
        <member name="P:Ats.Core.Tick.AskNumOrder1">
            <summary>
            实际卖总委托笔数一
            </summary>
        </member>
        <member name="T:Ats.Core.TickSeries">
            <summary>
            Tick序列
            </summary>
        </member>
        <member name="M:Ats.Core.TickSeries.Contains(System.DateTime)">
            <summary>
            是否包含时刻
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.TickSeries.Clone">
            <summary>
            克隆整个序列
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.TickSeries.GetDateTime(System.Int32)">
            <summary>
            给定index-得出当前这个位置时刻
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.TickSeries.GetIndex(System.DateTime)">
            <summary>
            根据时间直接定位到对应K线的index
            如果找不到，返回-1
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.TickSeries.GetAgoIndex(System.DateTime)">
            <summary>
            获取回溯的位置
            如果是当前AgoN=0
            右数第二个1
            右数第三个2
            如果找不到，返回-1
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="P:Ats.Core.TickSeries.Item(System.DateTime)">
            <summary>
            根据时间直接索引
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="T:Ats.Core.DateTimeSlice">
            <summary>
            时间片段
            </summary>
        </member>
        <member name="P:Ats.Core.DateTimeSlice.BeginTime">
            <summary>
            起始时间段
            </summary>
        </member>
        <member name="P:Ats.Core.DateTimeSlice.EndTime">
            <summary>
            结束时间段
            </summary>
        </member>
        <member name="P:Ats.Core.DateTimeSlice.Duration">
            <summary>
            覆盖的时间段
            </summary>
        </member>
        <member name="T:Ats.Core.TimeSlice">
            <summary>
            时间片段
            </summary>
        </member>
        <member name="F:Ats.Core.TimeSlice._begin">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="F:Ats.Core.TimeSlice._end">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="M:Ats.Core.TimeSlice.Contains(System.TimeSpan)">
            <summary>
            是否包含在时间段中间
            </summary>
            <param name="sp"></param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.TimeSlice.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Ats.Core.TimeSlice.#ctor(System.TimeSpan,System.TimeSpan)">
            <summary>
            构造函数
            </summary>
            <param name="tBegin">开始时间</param>
            <param name="tEnd">结束时间</param>
        </member>
        <member name="P:Ats.Core.TimeSlice.BeginTime">
            <summary>
            起始时间段
            </summary>
        </member>
        <member name="P:Ats.Core.TimeSlice.EndTime">
            <summary>
            结束时间段
            </summary>
        </member>
        <member name="P:Ats.Core.TimeSlice.Duration">
            <summary>
            覆盖的时间段
            </summary>
        </member>
        <member name="T:Ats.Core.Trade">
            <summary>
            成交
            统一：期货成交、股票成交
            </summary>
        </member>
        <member name="F:Ats.Core.Trade._StrategyToken">
            <summary>
            策略令牌
            </summary>
        </member>
        <member name="F:Ats.Core.Trade._BasketID">
            <summary>
            篮子ID
            </summary>
        </member>
        <member name="M:Ats.Core.Trade.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Ats.Core.Trade.ToString">
            <summary>
            转化成字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.Trade.Clone">
            <summary>
            克隆一份
            </summary>
            <returns>浅拷贝一份实例</returns>
        </member>
        <member name="P:Ats.Core.Trade.BasketID">
            <summary>
            篮子ID
            如果不属于篮子，则为空
            </summary>
        </member>
        <member name="P:Ats.Core.Trade.FundUnit">
            <summary>
            资金单元
            </summary>
        </member>
        <member name="P:Ats.Core.Trade.GUID">
            <summary>
            全局唯一ID，Trade创建时自动生成
            </summary>
        </member>
        <member name="P:Ats.Core.Trade.StrategyToken">
            <summary>
            策略令牌
            </summary>
        </member>
        <member name="P:Ats.Core.Trade.InstrumentType">
            <summary>
            品种类型：股票、期货
            </summary>
        </member>
        <member name="P:Ats.Core.Trade.TradeID">
            <summary>
            成交编号
            </summary>
        </member>
        <member name="P:Ats.Core.Trade.OrderSysID">
            <summary>
            对应委托的交易所ID
            </summary>
        </member>
        <member name="P:Ats.Core.Trade.OrderGUID">
            <summary>
            对应委托的本地GUID
            </summary>
        </member>
        <member name="P:Ats.Core.Trade.BrokerID">
            <summary>
            经纪公司代码
            </summary>
        </member>
        <member name="P:Ats.Core.Trade.InvestorID">
            <summary>
            投资者代码
            </summary>
        </member>
        <member name="P:Ats.Core.Trade.InstrumentID">
            <summary>
            合约代码
            </summary>
        </member>
        <member name="P:Ats.Core.Trade.ExchangeID">
            <summary>
            交易所代码
            </summary>
        </member>
        <member name="P:Ats.Core.Trade.Direction">
            <summary>
            买卖方向
            </summary>
        </member>
        <member name="P:Ats.Core.Trade.OpenOrClose">
            <summary>
            开平标志
            </summary>
        </member>
        <member name="P:Ats.Core.Trade.HedgeFlag">
            <summary>
            投机套保标志
            </summary>
        </member>
        <member name="P:Ats.Core.Trade.Price">
            <summary>
            成交价格
            </summary>
        </member>
        <member name="P:Ats.Core.Trade.Volume">
            <summary>
            成交的数量 
            </summary>
        </member>
        <member name="P:Ats.Core.Trade.TradeTime">
            <summary>
            成交时间，包含日期
            </summary> 
        </member>
        <member name="P:Ats.Core.Trade.SequenceNo">
            <summary>
            序号
            CTP专用
            </summary>
        </member>
        <member name="P:Ats.Core.Trade.TradingDay">
            <summary>
            交易日
            </summary> 
        </member>
        <member name="P:Ats.Core.Trade.SettlementID">
            <summary>
            结算编号
            </summary>
        </member>
        <member name="P:Ats.Core.Trade.BrokerOrderSeq">
            <summary>
            经纪公司报单编号
            </summary>
        </member>
        <member name="P:Ats.Core.Trade.TradeBalance">
            <summary>
            成交金额
            </summary>
        </member>
        <member name="T:Ats.Core.TradeSeries">
            <summary>
            成交队列
            统一：期货成交队列、股票成交队列
            </summary>
        </member>
        <member name="M:Ats.Core.TradeSeries.GetTrade(System.String,Ats.Core.EnumBuySell)">
            <summary>
            获取成交列表
            </summary>
            <param name="id">品种ID</param>
            <param name="TrdDirect">方向</param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.TradeSeries.GetTrade(System.String)">
            <summary>
            获取成交
            </summary>
            <param name="id">品种ID</param>
            <returns></returns>
        </member>
        <member name="M:Ats.Core.TradeSeries.Contains(System.String)">
            <summary>
            是否包含股票
            </summary>
            <param name="InstrumentID">股票代码</param>
            <returns></returns>
        </member>
    </members>
</doc>
